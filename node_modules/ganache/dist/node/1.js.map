{"version":3,"file":"1.js","mappings":"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","sources":["webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/index.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../../chains/ethereum/address/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/index.js","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/helpers.js","webpack://Ganache/../flavors/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/signing.js","webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../../chains/filecoin/options/lib/src/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/handlers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../../chains/ethereum/options/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/trie-db.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/params.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../../chains/ethereum/block/lib/src/serialize.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/index.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../../chains/ethereum/options/lib/src/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/database.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../../chains/ethereum/options/lib/src/fork-options.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../../chains/ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/signature.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../../chains/filecoin/options/lib/src/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/wallet-options.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../../chains/ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../../chains/ethereum/console.log/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/common-helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../core/lib/src/options/index.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../../chains/ethereum/options/lib/src/chain-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/database-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/logging-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/miner-options.js","webpack://Ganache/../utils/lib/src/types/connector.js","webpack://Ganache/../utils/lib/src/types/provider.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/unref.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/min-max.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../utils/lib/src/things/logger.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/account.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/account-proof.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/fee-history.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/raw.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-serialization.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block-params.js","webpack://Ganache/../../chains/ethereum/block/lib/src/snapshots.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/maybe-get-logs.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/signatures.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/constants.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/storage-range-at.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../../chains/filecoin/options/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/chain-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/database-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/logging-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/miner-options.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../flavors/lib|sync","webpack://Ganache/../core/lib/src/options/server-options.js","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n__exportStar(require(\"./src/things/logger\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length, offset = 0, alloc = Buffer.allocUnsafe) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = alloc(lengthEncodedLength + length);\n    encodedLength.copy(buf, offset, 0, lengthEncodedLength);\n    offset += lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\n/**\n * Slices a Buffer, throws if the slice goes out-of-bounds of the Buffer.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error(\"invalid RLP (safeSlice): end slice of Buffer out-of-bounds\");\n    }\n    return input.slice(start, end);\n}\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Buffer\n * @returns decoded Array of Buffers containing the original message\n **/\nfunction decode(input) {\n    if (!input || input.length === 0) {\n        return utils_1.BUFFER_EMPTY;\n    }\n    const decoded = _decode(input);\n    if (decoded.remainder.length !== 0) {\n        throw new Error(\"invalid RLP: remainder must be zero\");\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error(\"invalid RLP: extra zeros\");\n    }\n    return parseHexByte(bytesToHex(v));\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1)\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error(\"invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed\");\n        }\n        return {\n            data,\n            remainder: input.slice(length)\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error(\"invalid RLP: not enough bytes for string length\");\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength)\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length)\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error(\"invalid RLP: encoded list too short\");\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error(\"invalid RLP: total length is larger than the data\");\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength)\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, \"0\"));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = \"\";\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error(\"Invalid byte sequence\");\n    return byte;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends util_1.Address {\n    constructor(value) {\n        super(value);\n    }\n    static from(value) {\n        return new Address(utils_1.Data.toBuffer(value, Address.ByteLength));\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/signing\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n__exportStar(require(\"./src/transaction-serialization\"), exports);\n//# sourceMappingURL=index.js.map","export const debug = () => () => {};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n__exportStar(require(\"./src/constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetConnector = exports.DefaultOptionsByName = exports.DefaultFlavor = exports.FilecoinFlavorName = exports.EthereumFlavorName = void 0;\nconst ethereum_1 = require(\"@ganache/ethereum\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst filecoin_options_1 = require(\"@ganache/filecoin-options\");\nconst colors_1 = require(\"@ganache/colors\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\n// we need \"@ganache/options\" in order for TS to properly infer types for `DefaultOptionsByName`\nrequire(\"@ganache/options\");\nconst NEED_HELP = \"Need help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nexports.EthereumFlavorName = \"ethereum\";\nexports.FilecoinFlavorName = \"filecoin\";\nexports.DefaultFlavor = exports.EthereumFlavorName;\nexports.DefaultOptionsByName = {\n    [exports.EthereumFlavorName]: ethereum_options_1.EthereumDefaults,\n    [exports.FilecoinFlavorName]: filecoin_options_1.FilecoinDefaults\n};\nfunction GetConnector(flavor, providerOptions, executor) {\n    if (flavor === exports.DefaultFlavor) {\n        return new ethereum_1.Connector(providerOptions, executor);\n    }\n    try {\n        switch (flavor) {\n            case exports.FilecoinFlavorName: {\n                flavor = \"@ganache/filecoin\";\n                // TODO: remove the `typeof f.default != \"undefined\" ? ` check once the\n                // published filecoin plugin is updated to\n                const f = eval(\"require\")(flavor);\n                const Connector = typeof f.default != \"undefined\" ? f.default.Connector : f.Connector;\n                // @ts-ignore\n                return new Connector(providerOptions, executor);\n            }\n            default: {\n                // for future plugin compat\n                const { Connector } = require(flavor);\n                return new Connector(providerOptions, executor);\n            }\n        }\n    }\n    catch (e) {\n        if (e.message.includes(`Cannot find module '${flavor}'`)) {\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold filecoin}\" (${flavor}); ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.GetConnector = GetConnector;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.digestWithPrefix = exports.encodeWithPrefix = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2n + 35n;\n    const isEip155 = v === eip155V || v === eip155V + 1n;\n    if (isEip155) {\n        const chainBuf = (0, utils_1.bigIntToBuffer)(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = Number(v - eip155V);\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = Number(v) - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, rlp_1.digest)(ranges, length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toBigInt(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\n/**\n * Allocates a buffer of size + 1, to be used by `digest`.\n * The extra byte is used to store the transaction type.\n * The tx type is stored in the first byte of the buffer.\n * @param size\n * @returns\n */\nconst allocUnsafePrefix = (size) => Buffer.allocUnsafe(size + 1);\n/**\n * Encodes the given `raw` data and prepends the `prefix` to the output Buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param raw\n * @returns\n */\nconst encodeWithPrefix = (prefix, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, raw.length);\n    const ranges = [encodedData.output];\n    const length = encodedData.length;\n    return (0, exports.digestWithPrefix)(prefix, ranges, length);\n};\nexports.encodeWithPrefix = encodeWithPrefix;\n/**\n * Digests the rlp `ranges` and prepends the `prefix` to the output Buffer.\n *\n * This function avoids the need to copy the output of `digest` into a new\n * prefixed buffer by over provisioning the initial output buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param ranges\n * @param length\n * @returns\n */\nconst digestWithPrefix = (prefix, ranges, length) => {\n    // digest the ranges using the provided allocUnsafe function at an offset of `1`\n    const output = (0, rlp_1.digest)(ranges, length, 1, allocUnsafePrefix);\n    // set the first byte to the prefix\n    output[0] = prefix;\n    return output;\n};\nexports.digestWithPrefix = digestWithPrefix;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(1, ranges, length);\n    const data = (0, exports.digestWithPrefix)(1, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[9], raw[10], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.subarray(1)).subarray(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(2, ranges, length);\n    const data = (0, exports.digestWithPrefix)(2, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION_KEY = exports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n/**\n * Buffer representation of the string \"version\":\n */\nexports.VERSION_KEY = Buffer.from([118, 101, 114, 115, 105, 111, 110]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to = data.to == null ? null : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), utils_1.Quantity.toBuffer(result.totalGasSpent), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param _event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\nexports.default = Manager;\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\n//# sourceMappingURL=manager.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports._DefaultServerOptions = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = __importDefault(require(\"./src/connector-loader\"));\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nObject.defineProperty(exports, \"_DefaultServerOptions\", { enumerable: true, get: function () { return server_2._DefaultServerOptions; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = connector_loader_1.default.initialize(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionType = void 0;\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    //todo: this should be EIP1559FeeMarket\n    //https://github.com/trufflesuite/ganache/issues/4462\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst MAX_ACCOUNTS = 100000;\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts, logging) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        if (opts.totalAccounts > MAX_ACCOUNTS) {\n            logging.logger.log(`wallet.totalAccounts exceeds MAX_ACCOUNTS (${MAX_ACCOUNTS}) and may affect performance.`);\n        }\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\nexports.default = Wallet;\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\n//# sourceMappingURL=wallet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handlers = exports.bytes = exports.address = exports.bool = exports.string = exports.uint256 = exports.int256 = exports.fixedBytes = exports.WORD_SIZE = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * EVM word size for abi encoded data\n */\nexports.WORD_SIZE = 32; // bytes\n/**\n * Used to convert _from_ twos compliment\n * This is calculated via:\n * ~((1n << (8n * BigInt(WORD_SIZE))) - 1n)\n */\nconst OR_WITH_TWOS_COMPLEMENT = -0x10000000000000000000000000000000000000000000000000000000000000000n;\n/**\n * For dynamic-length types, like `bytes` and `string`, returns the starting\n * position of the value in `memory`, and the `end` position of the value.\n *\n * Calling this function when the type is not dynamic will not work. You have\n * been warned.\n *\n * @param memory\n * @param offset The offset into the given memory from which to start parsing.\n * @returns The starting position of the value in `memory`, and the `end` position of the value.\n */\nfunction getDynamicDataMarkers(memory, offset) {\n    // A Buffer's length maxes out at UInt32 max, 4294967295, (2**(8 * 4)) - 1) so\n    // it is safe to decode the `start` and `length` values as UInt32s.\n    //\n    // If we had a start position \"word\" of:\n    //   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60\n    // we know we really only need to read the last 4 bytes, since we know that\n    // a Buffer's length can't be greater than UInt32 (which can be represented by\n    // up to 4 bytes). So we only need to look at:\n    // 00 00 00 60\n    // `offset + WORD_SIZE - UINT32_BYTE_LENGTH` effectively tells `readUInt32BE`\n    // to read only these last 4 bytes of the word that represent the `start`\n    // value.\n    // We add WORD_SIZE to this value because we are skipping over the location of\n    // the length and referencing the start of the location of the data itself.\n    const UINT32_BYTE_LENGTH = 4;\n    const nextWordOffset = offset + exports.WORD_SIZE;\n    const startUint32MemoryPosition = nextWordOffset - UINT32_BYTE_LENGTH;\n    const start = memory.readUInt32BE(startUint32MemoryPosition) + exports.WORD_SIZE;\n    // the same optimization is applied here.\n    // The word that immediately precedes the data itself is the data's `length`:\n    const end = start + memory.readUInt32BE(start - UINT32_BYTE_LENGTH);\n    return { start, end };\n}\n/**\n * Ganerates a handler function for solidity's bytes1-bytes32 types\n * @param length From 1 to 32.\n * @returns A function that accepts a memory Buffer and an offset.\n */\nfunction fixedBytes(length) {\n    return (memory, offset) => handleBytes(memory, offset, offset + length);\n}\nexports.fixedBytes = fixedBytes;\n/**\n * Returns the hex representation of the bytes in `memory`.\n *\n * @param memory\n * @param start The start of the data in the given memory.\n * @param end The end of the data in the given memory (not inclusive).\n * @returns\n */\nfunction handleBytes(memory, start, end) {\n    return `0x${memory.toString(\"hex\", start, end)}`;\n}\nconst int256 = (memory, offset) => {\n    // convert from two's compliment to signed BigInt\n    const twosComplementBuffer = memory.subarray(offset, offset + exports.WORD_SIZE);\n    const twosComplementBigInt = (0, utils_1.bufferToBigInt)(twosComplementBuffer);\n    if (twosComplementBuffer[0] & 128) {\n        // if the first bit is `1` we need to convert from two's compliment\n        return twosComplementBigInt | OR_WITH_TWOS_COMPLEMENT;\n    }\n    else {\n        // if the first bit is not `1` we can treat it as unsigned\n        return twosComplementBigInt;\n    }\n};\nexports.int256 = int256;\n/**\n * Handle decoding of solidity's `uint256` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst uint256 = (memory, offset) => (0, utils_1.bufferToBigInt)(memory.subarray(offset, offset + exports.WORD_SIZE));\nexports.uint256 = uint256;\n/**\n * Handle decoding of solidity's dynamic `string` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst string = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return memory.toString(\"utf8\", start, end);\n};\nexports.string = string;\n/**\n * Handle decoding of solidity's `bool` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bool = (memory, offset) => memory[offset + exports.WORD_SIZE - 1] !== 0;\nexports.bool = bool;\n/**\n * Handle decoding of solidity's `address` type from EVM memory.\n * @param memory\n * @param offset\n * @returns A 20 byte hex encoded string, prefixed with 0x.\n */\nconst address = (memory, offset) => `0x${memory.toString(\"hex\", offset + 12, offset + exports.WORD_SIZE)}`;\nexports.address = address;\n/**\n * Handle decoding of solidity's dynamic `bytes` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bytes = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return handleBytes(memory, start, end);\n};\nexports.bytes = bytes;\nexports.Handlers = {\n    address: exports.address,\n    bool: exports.bool,\n    bytes: exports.bytes,\n    int256: exports.int256,\n    string: exports.string,\n    uint256: exports.uint256\n};\n//# sourceMappingURL=handlers.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\nconst console_log_1 = require(\"@ganache/console.log\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity = exports.Capacity || (exports.Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new trie_1.Trie();\n                const receiptTrie = new trie_1.Trie();\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root(), 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(utils_1.Quantity.toBuffer(event.stack[event.stack.length - 1])).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                };\n                vm.evm.events.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number);\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = result.totalGasSpent;\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.evm.events.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), blockBloom, vm.stateManager._trie.root(), blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs)\n                    this.emit(\"ganache:vm:tx:console.log\", { context, logs });\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    skipHardForkValidation: true,\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.evm.events.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, newBlock.header.baseFeePerGas, \"f\");\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, block.header.baseFeePerGas, \"f\");\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\nexports.default = Miner;\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap();\n//# sourceMappingURL=miner.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                    number: BigInt(json.number),\n                    timestamp: BigInt(json.timestamp)\n                });\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    static rawFromJSON(json, common) {\n        const blockNumber = utils_1.Quantity.toBuffer(json.number);\n        const hasWithdrawals = json.withdrawalsRoot != null;\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            blockNumber,\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // We can't include the _slots_ for these values in the `header` array\n        // (i.e., set them to `undefined`), when the values are `undefined`, as the\n        // `length` of the array is encoded by the rlp process.\n        if (json.baseFeePerGas) {\n            header[15] = utils_1.Quantity.toBuffer(json.baseFeePerGas);\n            if (hasWithdrawals) {\n                header[16] = utils_1.Data.toBuffer(json.withdrawalsRoot);\n            }\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = Array(json.transactions.length);\n        const extraTxs = Array(json.transactions.length);\n        const blockHash = utils_1.Data.toBuffer(json.hash);\n        for (let index = 0; index < json.transactions.length; index++) {\n            const txJson = json.transactions[index];\n            const blockExtra = [\n                ethereum_address_1.Address.toBuffer(txJson.from),\n                utils_1.Quantity.toBuffer(txJson.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                blockHash,\n                blockNumber,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(txJson, common, txExtra);\n            txs[index] =\n                tx.raw.length === 9\n                    ? tx.raw\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[index] = blockExtra;\n        }\n        let start;\n        if (hasWithdrawals) {\n            const extraWithdrawals = Array(json.withdrawals.length);\n            for (let i = 0; i < json.withdrawals.length; i++) {\n                const withdrawal = json.withdrawals[i];\n                extraWithdrawals[i] = [\n                    utils_1.Quantity.toBuffer(withdrawal.index),\n                    utils_1.Quantity.toBuffer(withdrawal.validatorIndex),\n                    ethereum_address_1.Address.toBuffer(withdrawal.address),\n                    utils_1.Quantity.toBuffer(withdrawal.amount)\n                ];\n            }\n            start = [header, txs, [], extraWithdrawals];\n        }\n        else {\n            start = [header, txs, []];\n        }\n        return (0, ethereum_block_1.serialize)(start, [totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n            case \"finalized\":\n            case \"safe\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const number = BigInt(json.number);\n                    if (number <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                            number,\n                            timestamp: BigInt(json.timestamp)\n                        });\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3481\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    const header = (0, rlp_1.decode)(block)[0];\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlock(common, {\n                        number: blockNumber.toBigInt(),\n                        timestamp: utils_1.Quantity.toBigInt(header[11])\n                    }));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    async getEarliest() {\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        if (fallback) {\n            const json = await fallback.request(\"eth_getBlockByNumber\", [ethereum_utils_1.Tag.earliest, true], \n            // TODO: re-enable cache once this is fixed\n            // https://github.com/trufflesuite/ganache/issues/3773\n            { disableCache: true });\n            if (json) {\n                const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                    number: BigInt(json.number),\n                    timestamp: BigInt(json.timestamp)\n                });\n                return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n            }\n        }\n        else {\n            // if we're forking, there shouldn't be an earliest block saved to the db,\n            // it's always retrieved from the fork\n            for await (const data of this.base.createValueStream({ limit: 1 })) {\n                return new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n            }\n        }\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            this.getEarliest(),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            this.latest = await (async () => {\n                let latest;\n                for await (const data of this.base.createValueStream()) {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                }\n                return latest;\n            })();\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\nexports.default = BlockManager;\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            this.gasUsed = gasUsed;\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                this.gasUsed,\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const { blockHash, blockNumber } = transaction;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(this.gasUsed),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieDB = void 0;\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst ENCODING_OPTS = { keyEncoding: \"binary\", valueEncoding: \"binary\" };\n/**\n * `@ethereumjs/trie` requires that any database passed to it implements a `DB`.\n * The `DB` interface defines the minimum set of database access methods that\n * ethereumjs needs internally. We implement that interface in `TrieDB`, as well\n * as a few other methods that we use in Ganache internally.\n */\nclass TrieDB {\n    constructor(db) {\n        this._db = db;\n    }\n    async get(key) {\n        let value = null;\n        try {\n            value = await this._db.get(key, ENCODING_OPTS);\n        }\n        catch (error) {\n            if (error.notFound) {\n                // not found, returning null\n            }\n            else {\n                throw error;\n            }\n        }\n        return value;\n    }\n    async put(key, val) {\n        await this._db.put(key, val, ENCODING_OPTS);\n    }\n    async del(key) {\n        await this._db.del(key, ENCODING_OPTS);\n    }\n    async batch(opStack) {\n        await this._db.batch(opStack, ENCODING_OPTS);\n    }\n    copy() {\n        return new TrieDB(this._db);\n    }\n    async close() {\n        await this._db.close();\n    }\n    sublevel(prefix, options) {\n        return (0, subleveldown_1.default)(this._db, prefix, options);\n    }\n    createReadStream(options) {\n        return this._db.createReadStream(options);\n    }\n}\nexports.TrieDB = TrieDB;\n//# sourceMappingURL=trie-db.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least significant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least significant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INITCODE_TOO_LARGE = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if the transaction's `to` address is empty and its `data`/`input` field is greater than the EIP-3860 limit of\n * 49152 bytes. Can be bypassed by setting the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\n */\nexports.INITCODE_TOO_LARGE = \"Transaction's `data`/`input` field is greater than 49152 bytes, which isn't allowed as of EIP-3860. To bypass this restriction set the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    let gas;\n    // set the starting gas for the transaction\n    if (hasToAddress) {\n        gas = params_1.Params.TRANSACTION_GAS;\n    }\n    else {\n        // if it doesn't have a \"to\" address this is a contract creation and it costs\n        // `TRANSACTION_CREATION_GAS`.\n        gas = params_1.Params.TRANSACTION_CREATION_GAS;\n    }\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // Issue: https://github.com/trufflesuite/ganache/issues/3486\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const bigDataLength = BigInt(dataLength);\n            const zeroBytes = bigDataLength - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n            // after shanghai contract creation costs a little more\n            if (!hasToAddress && common.isActivatedEIP(3860)) {\n                const lenWords = (bigDataLength + 31n) / 32n;\n                gas += lenWords * params_1.Params.INITCODE_WORD_GAS;\n            }\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n],\n        [\"grayGlacier\", 16n],\n        [\"merge\", 16n],\n        [\"mergeForkIdTransition\", 16n],\n        [\"shanghai\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction (includes base fee of `TRANSACTION_GAS`)\n     */\n    TRANSACTION_CREATION_GAS: 53000n,\n    /**\n     * Only used after shanghai hardFork, `initcode` per byte cost is 0.0625.\n     * While fractional gas costs are not permitted in the EVM, we can approximate\n     * it by charging per-word.\n     */\n    INITCODE_WORD_GAS: 2n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertRawWithdrawals = exports.blockTransactionFromRaw = exports.serialize = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Serializes a block to compute its size and store it in the database.\n * @param start\n * @param end\n * @returns\n */\nfunction serialize(start, end) {\n    const serializedStart = (0, rlp_1.encodeRange)(start, 0, start.length);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(end, 0, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\nfunction isLegacyRawTransaction(raw) {\n    return raw.length === 9;\n}\n/**\n * Converts a raw transaction encoded for use in a raw block into a `Transaction`\n *\n * @param raw the raw transaction data after the block has been rlp decoded.\n * @param common\n * @param extra\n * @returns\n */\nfunction blockTransactionFromRaw(raw, common, extra) {\n    let txData;\n    let type;\n    if (isLegacyRawTransaction(raw)) {\n        // legacy txs\n        type = 0;\n        txData = raw;\n    }\n    else {\n        // type 1 and 2 txs\n        type = raw[0];\n        txData = (0, rlp_1.decode)(raw.subarray(1));\n    }\n    return ethereum_transaction_1.TransactionFactory.fromSafeTypeAndTxData(type, txData, common, extra);\n}\nexports.blockTransactionFromRaw = blockTransactionFromRaw;\nfunction convertRawWithdrawals([index, validatorIndex, address, amount]) {\n    return {\n        index: utils_1.Quantity.from(index),\n        validatorIndex: utils_1.Quantity.from(validatorIndex),\n        address: ethereum_address_1.Address.from(address),\n        amount: utils_1.Quantity.from(amount)\n    };\n}\nexports.convertRawWithdrawals = convertRawWithdrawals;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n__exportStar(require(\"./types/account-proof\"), exports);\n__exportStar(require(\"./types/fee-history\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n__exportStar(require(\"./min-max\"), exports);\n__exportStar(require(\"./signature\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_createFastForwardVm, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst vm_1 = require(\"@ethereumjs/vm\");\nconst evm_1 = require(\"@ethereumjs/evm\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst console_log_1 = require(\"@ganache/console.log\");\nconst storage_range_at_1 = require(\"./helpers/storage-range-at\");\nconst state_manager_2 = require(\"./state-manager\");\nconst common_helpers_1 = require(\"./helpers/common-helpers\");\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root(stateRoot);\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, trieDB, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.Common.custom({\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\",\n        defaultHardfork: hardfork\n    }, \n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use (and what EIPs are active). But just incase\n    // things change in the future its configured \"more correctly\" here.\n    { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    // TODO: the block has already done most of the work serializing the tx\n                    // we should reuse it, if possible\n                    // https://github.com/trufflesuite/ganache/issues/4341\n                    const serialized = (0, ethereum_transaction_1.serializeForDb)(tx, blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, previousHeader.totalDifficulty, this.getMixHash(previousBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(previousBlock), util_1.KECCAK256_RLP);\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, onlyOneBlock = false, timestamp) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            if (__classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement !== \"clock\") {\n                // if block time is incremental, adjustments should only apply once,\n                // otherwise they accumulate with each block.\n                __classPrivateFieldSet(this, _Blockchain_timeAdjustment, 0, \"f\");\n            }\n            else if (timestamp !== undefined) {\n                // when miner.timestampIncrement is a number, the previous block timestamp\n                // is used as a reference for the next block, so this call is not\n                // required.\n                this.setTimeDiff(timestamp * 1000);\n            }\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: stateTrie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie: stateTrie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({ common, allowUnlimitedContractSize, eei });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.eei);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(account => {\n                    this.vm.eei.putAccount(account.address, account);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, fallbackBlock.header.totalDifficulty, this.getMixHash(fallbackBlock.hash().toBuffer()), baseFeePerGas, util_1.KECCAK256_RLP);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(this.common, rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            // we use the initial trie root as the genesis block's mixHash as it\n            // is deterministic based on initial wallet conditions\n            this.isPostMerge ? (0, utils_1.keccak)(this.trie.root()) : utils_1.BUFFER_32_ZERO, baseFeePerGas, util_1.KECCAK256_RLP);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        /**\n         * Creates a new VM with it's internal state set to that of the given `block`,\n         * up to, but _not_ including, the transaction at the given\n         * `transactionIndex`.\n         *\n         * Note: the VM is returned in a \"checkpointed\" state.\n         *\n         * @param transactionIndex\n         * @param trie\n         * @param block\n         */\n        _Blockchain_createFastForwardVm.set(this, async (transactionIndex, trie, block) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlock(this.common, block.header)\n                : this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: trie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({\n                common,\n                allowUnlimitedContractSize: __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize,\n                eei\n            });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = async () => { };\n            // Process the block without committing the data.\n            await vm.stateManager.checkpoint();\n            for (let i = 0; i < transactionIndex; i++) {\n                const tx = block.transactions[i];\n                const transactionEventContext = {};\n                this.emit(\"ganache:vm:tx:before\", {\n                    context: transactionEventContext\n                });\n                await vm.runTx({\n                    skipHardForkValidation: true,\n                    skipNonce: true,\n                    skipBalance: true,\n                    skipBlockGasLimitValidation: true,\n                    tx,\n                    block: block\n                });\n                this.emit(\"ganache:vm:tx:after\", {\n                    context: transactionEventContext\n                });\n            }\n            return vm;\n        });\n        _Blockchain_traceTransaction.set(this, async (transactionIndex, trie, newBlock, options) => {\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, transactionIndex, trie, newBlock);\n            let currentDepth = -1;\n            const storageStack = [];\n            const storage = {};\n            let gas = 0n;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transaction = newBlock.transactions[transactionIndex];\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft;\n                const totalGasUsedAfterThisStep = transaction.gasLimit - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                let memory;\n                if (options.disableMemory === true) {\n                    memory = [];\n                }\n                else {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    const limit = Number(event.memoryWordCount);\n                    memory = Array(limit);\n                    let index = 0;\n                    while (index < limit) {\n                        const offset = index * 32;\n                        const slice = event.memory.subarray(offset, offset + 32);\n                        memory[index++] = TraceData.from(slice);\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(utils_1.Quantity.toBuffer(stackItem)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: utils_1.Quantity.from(gasLeft),\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = Number(gasUsedPreviousStep);\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            this.emit(\"ganache:vm:tx:before\", {\n                context: transactionEventContext\n            });\n            await vm.runTx({\n                skipHardForkValidation: true,\n                skipNonce: true,\n                skipBalance: true,\n                skipBlockGasLimitValidation: true,\n                tx: transaction,\n                block: newBlock\n            });\n            this.emit(\"ganache:vm:tx:after\", {\n                context: transactionEventContext\n            });\n            vm.evm.events.removeListener(\"step\", stepListener);\n            // send state results back\n            return {\n                gas: utils_1.Quantity.from(gas),\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        /**\n         * Creates a block based on the given `targetBlock` that contains only the\n         * transactions from `targetBlock` up to and including the transaction at\n         * `transactionIndex`.\n         *\n         * @param targetBlock\n         * @param parentBlock\n         * @param transactionIndex\n         * @returns\n         */\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionIndex) => {\n            targetBlock.header.parentHash;\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), ethereum_address_1.Address.from(parentBlock.header.miner.toString()), parentBlock.header.gasLimit, utils_1.Quantity.Zero, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, this.getMixHash(parentBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(parentBlock), util_1.KECCAK256_RLP);\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (let i = 0; i <= transactionIndex; i++) {\n                const tx = transactions[i];\n                newBlock.transactions.push(tx.toVmTransaction());\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = Number(common.networkId());\n                options.chain.chainId = Number(common.chainId());\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n                if (options.chain.allowUnlimitedInitCodeSize) {\n                    (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(common);\n                }\n            }\n            this.isPostMerge = this.common.gteHardfork(\"merge\");\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // Grab current time once to be used in all references to \"now\", to avoid\n                // any discrepancies. See https://github.com/trufflesuite/ganache/issues/3271\n                const startTime = new Date();\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = startTime;\n                // create first block\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - +startTime, \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.latest = await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                    // when we are forking, blocks.earliest is already set to what was\n                    // retrieved from the fork\n                    if (!blocks.earliest) {\n                        blocks.earliest = blocks.latest;\n                    }\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                miner.on(\"ganache:vm:tx:console.log\", event => {\n                    options.logging.logger.log(...event.logs);\n                    this.emit(\"ganache:vm:tx:console.log\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    getMixHash(data) {\n        // mixHash is used as an RNG post merge hardfork\n        return this.isPostMerge ? (0, utils_1.keccak)(data) : utils_1.BUFFER_32_ZERO;\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * Adjusts the internal time adjustment such that the provided time is considered the \"current\" time.\n     * @param newTime - the time (in milliseconds) that will be considered the \"current\" time\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const { hash } = transaction;\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        if (!instamine || __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            return hash;\n        }\n        else {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            // if the transaction is not executable, we just have to return the hash\n            if (instamine && options.miner.instamine === \"eager\") {\n                if (!isExecutable) {\n                    // users have been confused about why ganache \"hangs\" when sending a\n                    // transaction with a \"too-high\" nonce. This message should help them\n                    // understand what's going on.\n                    options.logging.logger.log(`Transaction \"${hash}\" has a too-high nonce; this transaction has been added to the pool, and will be processed when its nonce is reached. See https://github.com/trufflesuite/ganache/issues/4165 for more information.`);\n                }\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || options.chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        const to = hasToAddress ? new ethereum_address_1.Address(transaction.to.toBuffer()) : null;\n        const common = this.fallback\n            ? this.fallback.getCommonForBlock(this.common, transaction.block.header)\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const vm = await this.createVmFromStateTrie(stateTrie, options.chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            await vm.eei.checkpoint();\n            vm.evm.events.on(\"step\", (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs) {\n                    options.logging.logger.log(...logs);\n                    this.emit(\"ganache:vm:tx:console.log\", {\n                        context: transactionContext,\n                        logs\n                    });\n                }\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            const callerAddress = new ethereum_address_1.Address(caller);\n            if (common.isActivatedEIP(2929)) {\n                const eei = vm.eei;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(eei);\n                eei.addWarmedAddress(caller);\n                if (to)\n                    eei.addWarmedAddress(to.buf);\n                // shanghai hardfork requires that we warm the coinbase address\n                if (common.isActivatedEIP(3651)) {\n                    eei.addWarmedAddress(transaction.block.header.coinbase.buf);\n                }\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.eei.getAccount(callerAddress);\n            fromAccount.nonce += 1n;\n            const txCost = gasLimit * transaction.gasPrice.toBigInt();\n            const startBalance = fromAccount.balance;\n            // TODO: should we throw if insufficient funds?\n            fromAccount.balance = txCost > startBalance ? 0n : startBalance - txCost;\n            await vm.eei.putAccount(callerAddress, fromAccount);\n            // finally, run the call\n            result = await vm.evm.runCall({\n                caller: callerAddress,\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: transaction.gasPrice.toBigInt(),\n                gasLimit: gasLeft,\n                to,\n                value: transaction.value == null ? 0n : transaction.value.toBigInt(),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new evm_1.EvmError(evm_1.EvmErrorMessage.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const txIndex = transaction.index.toNumber();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, txIndex, trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const { trie: trieDb, storageKeys: storageKeysDb } = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const trie = makeTrie(this, trieDb, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.toBuffer(contractAddress);\n        const rawAccount = await trie.get(contractAddressBuffer);\n        if (!rawAccount) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        let storageTrie;\n        if (txIndex === 0) {\n            // there are no transactions to run, so let's just grab what we need\n            // from the last block's trie\n            const [, , stateRoot] = (0, rlp_1.decode)(rawAccount);\n            trie.setContext(stateRoot, contractAddressBuffer, parentBlock.header.number);\n            storageTrie = trie;\n        }\n        else {\n            // prepare block to be run in traceTransaction\n            const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n            // run every transaction in that block prior to the requested transaction\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, txIndex, trie, newBlock);\n            storageTrie = await vm.stateManager.getStorageTrie(contractAddressBuffer);\n        }\n        return await (0, storage_range_at_1.dumpTrieStorageDetails)(utils_1.Data.toBuffer(startKey), maxResult, storageTrie, storageKeysDb);\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        if (this.vm) {\n            this.vm.events.removeAllListeners();\n            this.vm.evm && this.vm.evm.events.removeAllListeners();\n        }\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\nexports.default = Blockchain;\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_createFastForwardVm = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        // `MINE_ONLY_ONE_BLOCK` refers to the number of blocks mined per call to `blockchain.mine()`\n        const MINE_ONLY_ONE_BLOCK = true;\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const timestamp = arg;\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.nonce = utils_1.Quantity.toBigInt(nonce);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.balance = utils_1.Quantity.toBigInt(balance);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        await eei.checkpoint();\n        if (codeBuffer.length > 0) {\n            await eei.putContractCode(vmAddress, codeBuffer);\n        }\n        else {\n            const account = await eei.getAccount(vmAddress);\n            account.codeHash = util_1.KECCAK256_NULL;\n            await eei.putAccount(vmAddress, account);\n        }\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        await eei.checkpoint();\n        await eei.putContractStorage(vmAddress, slotBuffer, valueBuffer);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * await new Promise(resolve => {\n     *   setTimeout(async () => {\n     *     const time = await provider.send(\"evm_setTime\", [currentDate]);\n     *     console.log(time); // should be about two seconds ago\n     *     resolve();\n     *   }, 1000);\n     * });\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"\";\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"0xabcdef0123456789\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = async () => {\n            // note(hack): blockchain.vm.copy() doesn't work so we just do it this way\n            // /shrug\n            const vm = await blockchain.createVmFromStateTrie(blockchain.trie.copy(false), options.chain.allowUnlimitedContractSize, false);\n            return vm;\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(blockchain.common, utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, new ethereum_address_1.Address(parentHeader.miner.toBuffer()), tx.gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), 0n, // no baseFeePerGas for estimates\n            util_1.KECCAK256_RLP);\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    return void reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        // @ts-ignore\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the details for the account at the specified address and block\n     * number, the account's Merkle proof, and the storage values for the\n     * specified storage keys with their Merkle-proofs.\n     *\n     * @param address - Address of the account\n     * @param storageKeys - Array of storage keys to be proofed.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\", or\n     * \"pending\".\n     * @returns An object containing the details for the account at the specified\n     * address and block number, the account's Merkle proof, and the\n     * storage-values for the specified storage keys with their Merkle-proofs:\n     * * `balance`: `QUANTITY` - the balance of the account.\n     * * `codeHash`: `DATA` - 32 Bytes - hash of the account. A simple account\n     *   without code will return\n     *   `\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`\n     * * `nonce`: `QUANTITY` - the nonce of the account.\n     * * `storageHash`: `DATA` - 32 Bytes - SHA3 of the StorageRoot. All storage\n     *   will deliver a MerkleProof starting with this rootHash.\n     * * `accountProof`: `Array` - Array of rlp-serialized MerkleTree-Nodes,\n     *   starting with the stateRoot-NODE, following the path of the SHA3\n     *   (address) as key.\n     * * `storageProof`: `Array` - Array of storage entries as requested. Each\n     *   entry is an object with the following properties:\n     *   * `key`: `DATA` - the requested storage key.\n     *   * `value`: `QUANTITY` - the storage value.\n     *   * `proof`: `Array` - Array of rlp-serialized MerkleTree-Nodes, starting\n     *     with the storageHash-Node, following the path of the SHA3 (key) as\n     *     path.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting `value` to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\n     * console.log(proof);\n     * ```\n     */\n    async eth_getProof(address, storageKeys, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"eth_getProof is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3234 for details.\");\n        }\n        const targetBlock = await blockchain.blocks.get(blockNumber);\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffers = storageKeys.map(slotHex => utils_1.Data.toBuffer(slotHex, 32));\n        const stateManagerCopy = blockchain.vm.stateManager.copy();\n        await stateManagerCopy.setStateRoot(targetBlock.header.stateRoot.toBuffer());\n        const proof = await stateManagerCopy.getProof(vmAddress, slotBuffers);\n        return {\n            address: vmAddress,\n            balance: utils_1.Quantity.from(proof.balance),\n            codeHash: utils_1.Data.from(proof.codeHash),\n            nonce: utils_1.Quantity.from(proof.nonce),\n            storageHash: utils_1.Data.from(proof.storageHash),\n            accountProof: proof.accountProof.map(p => utils_1.Data.from(p)),\n            storageProof: proof.storageProof.map(storageProof => ({\n                key: utils_1.Data.from(storageProof.key),\n                proof: storageProof.proof.map(p => utils_1.Data.from(p)),\n                value: utils_1.Quantity.from(storageProof.value)\n            }))\n        };\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blocks.getByHash(hash).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return utils_1.Quantity.from(transactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [] ));\n     * ```\n     */\n    async eth_getWork() {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value), 32);\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const [transaction, receipt] = await Promise.all([\n            transactionPromise,\n            receiptPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\", maxFeePerGas: \"0xffffffff\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, utils_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    if (header.withdrawalsRoot !== undefined) {\n                        result.withdrawalsRoot = header.withdrawalsRoot;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(blockchain.common, parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), baseFeePerGasBigInt, util_1.KECCAK256_RLP);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    /**\n     * Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage.\n     *\n     * @param blockCount - Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available.\n     * @param newestBlock - Highest block of the requested range.\n     * @param rewardPercentiles - A monotonically increasing list of percentile values. For each block in the requested range,\n     * the transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\n     * will be determined, accounting for gas consumed.\n     * @returns Transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n     *\n     * * `oldestBlock`:  - Lowest number block of the returned range.\n     * * `baseFeePerGas`:  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\n     * because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n     * * `gasUsedRatio`:  - An array of block gas used ratios. These are calculated as the ratio of `gasUsed` and `gasLimit`.\n     * * `reward`:  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\n     * block is empty.\n     *\n     * @EIP [1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\n     * const feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\n     * console.log(feeHistory);\n     * ```\n     */\n    async eth_feeHistory(blockCount, newestBlock, rewardPercentiles) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const MIN_BLOCKS = 1;\n        const MAX_BLOCKS = 1024;\n        const PRECISION_FLOAT = 1e14;\n        const PAD_PRECISION = 16;\n        const PRECISION_BIG_INT = BigInt(1e16);\n        const newestBlockNumber = blockchain.blocks\n            .getEffectiveNumber(newestBlock)\n            .toBigInt();\n        // blockCount must be within MIN_BLOCKS and MAX_BLOCKS. blockCount > newestBlock is\n        // technically valid per the spec but we cannot go past the Genesis Block. Values\n        // above MAX_BLOCKS are technically within spec, however we cap totalBlocks because\n        // of the resource needs and potential abuse of a very large blockCount.\n        const totalBlocks = Number((0, utils_1.min)((0, utils_1.max)(utils_1.Quantity.toBigInt(blockCount), MIN_BLOCKS), newestBlockNumber + 1n, MAX_BLOCKS));\n        const baseFeePerGas = new Array(totalBlocks);\n        const gasUsedRatio = new Array(totalBlocks);\n        let reward;\n        // percentiles must be unique and in ascending order between 0 and 100\n        if (rewardPercentiles.length > 0) {\n            const ERR_INVALID_PERCENTILE = \"invalid reward percentile: percentiles must be unique and in ascending order\";\n            if (rewardPercentiles[0] < 0)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[0]}`);\n            if (rewardPercentiles[rewardPercentiles.length - 1] > 100)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[rewardPercentiles.length - 1]}`);\n            for (let i = 1; i < rewardPercentiles.length; i++) {\n                if (rewardPercentiles[i] <= rewardPercentiles[i - 1]) {\n                    throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[i]} ${rewardPercentiles[i - 1]}`);\n                }\n            }\n            reward = new Array(totalBlocks);\n        }\n        // totalBlocks is inclusive of newestBlock\n        const oldestBlockNumber = newestBlockNumber - BigInt(totalBlocks - 1);\n        let currentBlock;\n        let currentPosition = 0;\n        while (currentPosition < totalBlocks) {\n            currentBlock = await blockchain.blocks.get(utils_1.Quantity.toBuffer(oldestBlockNumber + BigInt(currentPosition)));\n            baseFeePerGas[currentPosition] = currentBlock.header.baseFeePerGas;\n            const gasUsed = currentBlock.header.gasUsed.toBigInt();\n            const gasLimit = currentBlock.header.gasLimit.toBigInt();\n            if (gasUsed === gasLimit) {\n                gasUsedRatio[currentPosition] = 1;\n            }\n            else {\n                gasUsedRatio[currentPosition] = Number(`0.${((gasUsed * PRECISION_BIG_INT) / gasLimit)\n                    .toString()\n                    .padStart(PAD_PRECISION, \"0\")}`);\n            }\n            // For each percentile, find the cost of the unit of gas at that percentage\n            if (reward !== undefined) {\n                const transactions = currentBlock.getTransactions();\n                // If there are no transactions, all reward percentiles are 0.\n                if (transactions.length === 0) {\n                    reward[currentPosition] = rewardPercentiles.map(() => utils_1.Quantity.Zero);\n                }\n                else {\n                    // For all transactions, effectiveGasReward = normalized fee per unit of gas\n                    // earned by the miner regardless of transaction type\n                    const baseFee = baseFeePerGas[currentPosition].toBigInt();\n                    const receipts = await Promise.all(transactions.map(tx => blockchain.transactionReceipts.get(tx.hash.toBuffer())));\n                    // Effective Reward is the amount paid per unit of gas\n                    const effectiveRewardAndGasUsed = transactions\n                        .map((tx, idx) => {\n                        let effectiveGasReward;\n                        if (\"maxPriorityFeePerGas\" in tx) {\n                            const maxPriorityFeePerGas = tx.maxPriorityFeePerGas.toBigInt();\n                            effectiveGasReward = BigInt((0, utils_1.min)(tx.maxFeePerGas.toBigInt() - baseFee, maxPriorityFeePerGas));\n                        }\n                        else {\n                            effectiveGasReward = tx.gasPrice.toBigInt() - baseFee;\n                        }\n                        return {\n                            effectiveGasReward: effectiveGasReward,\n                            gasUsed: utils_1.Quantity.toBigInt(receipts[idx].gasUsed)\n                        };\n                    })\n                        .sort((a, b) => {\n                        if (a.effectiveGasReward > b.effectiveGasReward)\n                            return 1;\n                        if (a.effectiveGasReward < b.effectiveGasReward)\n                            return -1;\n                        return 0;\n                    });\n                    // All of the block transactions are ordered, ascending, from least to greatest by\n                    // the fee the tx paid per unit of gas. For each percentile of block gas consumed,\n                    // what was the fee paid for the unit of gas at that percentile.\n                    reward[currentPosition] = rewardPercentiles.map(percentile => {\n                        let totalGasUsed = 0n;\n                        const targetGas = (gasUsed * BigInt(percentile * PRECISION_FLOAT)) /\n                            PRECISION_BIG_INT;\n                        for (const values of effectiveRewardAndGasUsed) {\n                            totalGasUsed = totalGasUsed + values.gasUsed;\n                            if (targetGas <= totalGasUsed) {\n                                return utils_1.Quantity.from(values.effectiveGasReward);\n                            }\n                        }\n                    });\n                }\n            }\n            currentPosition++;\n        }\n        // baseFeePerGas is calculated based on the header of the previous block, including the block after newestBlock.\n        baseFeePerGas[totalBlocks] = utils_1.Quantity.from(ethereum_block_1.Block.calcNextBaseFee(currentBlock));\n        return {\n            oldestBlock: utils_1.Quantity.from(oldestBlockNumber),\n            baseFeePerGas,\n            gasUsedRatio,\n            reward\n        };\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options = {}) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options);\n    }\n    // TODO: example doesn't return correct value\n    // Issue: https://github.com/trufflesuite/ganache/issues/3203\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"debug_storageRangeAt is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3488 for details.\");\n        }\n        return blockchain.storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * // fund the new account\n     * await provider.send(\"evm_setAccountBalance\", [newAccount,\"0xffffffffffffff\"])\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.send(\"miner_stop\")\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getProof\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_feeHistory\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"debug_traceTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(5)\n], EthereumApi.prototype, \"debug_storageRangeAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\nexports.default = EthereumApi;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\n// Issue: https://github.com/trufflesuite/ganache/issues/3474\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                // Issue: https://github.com/trufflesuite/ganache/issues/3475\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req, null));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3485\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_providerOptions, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_host, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports._DefaultServerOptions = exports.ServerStatus = void 0;\nconst options_1 = require(\"./options\");\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavors_1 = require(\"@ganache/flavors\");\nconst connector_loader_1 = __importDefault(require(\"./connector-loader\"));\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\n// not using the \"net\" node package in order to avoid having to polyfill this\n// for the browser build.\n// isIPv4 taken from https://github.com/nodejs/node/blob/01323d50c4b24cf730a651d06ba20633905ecbed/lib/internal/net.js#L31\nconst v4Seg = \"(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\";\nconst IPv4Reg = new RegExp(`^(${v4Seg}[.]){3}${v4Seg}$`);\nconst isIPv4 = (s) => IPv4Reg.test(s);\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === ServerStatus.ready` or `status & ServerStatus.ready !== 0`\n *  * opening: `status === ServerStatus.opening` or `status & ServerStatus.opening !== 0`\n *  * open: `status === ServerStatus.open` or `status & ServerStatus.open !== 0`\n *  * opening || open: `status & ServerStatus.openingOrOpen !== 0` or `status & (ServerStatus.opening | ServerStatus.open) !== 0`\n *  * closing: `status === ServerStatus.closing` or `status & ServerStatus.closing !== 0`\n *  * closed: `status === ServerStatus.closed` or `status & ServerStatus.closed !== 0`\n *  * closing || closed: `status & ServerStatus.closingOrClosed !== 0` or `status & (ServerStatus.closing | ServerStatus.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus = exports.ServerStatus || (exports.ServerStatus = {}));\n/**\n * For private use. May change in the future.\n * I don't don't think these options should be held in this `core` package.\n * @ignore\n * @internal\n */\nexports._DefaultServerOptions = options_1.serverDefaults;\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    constructor(providerAndServerOptions = {\n        flavor: flavors_1.DefaultFlavor\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_providerOptions.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_host.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_options, options_1.serverOptionsConfig.normalize(providerAndServerOptions), \"f\");\n        __classPrivateFieldSet(this, _Server_providerOptions, providerAndServerOptions, \"f\");\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because `initialize` sets the\n        // `provider` property... and someone might want to do:\n        //   const server = Ganache.server();\n        //   const provider = server.provider;\n        //   await server.listen(8545)\n        const loader = connector_loader_1.default.initialize(__classPrivateFieldGet(this, _Server_providerOptions, \"f\"));\n        const connector = (__classPrivateFieldSet(this, _Server_connector, loader.connector, \"f\"));\n        // Since the ConnectorLoader starts an async promise that we intentionally\n        // don't await yet we keep the promise around for something else to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, Promise.all([\n            loader.promise,\n            this.initialize(connector)\n        ]), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    async initialize(connector) {\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (__classPrivateFieldGet(this, _Server_options, \"f\").server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        await connector.once(\"ready\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const promise = Promise.allSettled([\n            __classPrivateFieldGet(this, _Server_initializer, \"f\"),\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                    __classPrivateFieldSet(this, _Server_host, host || DEFAULT_HOST, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    // emulate part of node's EADDRINUSE error:\n                    err.code = \"EADDRINUSE\";\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    address() {\n        if (__classPrivateFieldGet(this, _Server_listenSocket, \"f\")) {\n            const address = __classPrivateFieldGet(this, _Server_host, \"f\");\n            return {\n                address,\n                family: isIPv4(address) ? \"IPv4\" : \"IPv6\",\n                port: (0, uws_js_unofficial_1.us_socket_local_port)(__classPrivateFieldGet(this, _Server_listenSocket, \"f\"))\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_providerOptions = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_host = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connector\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption = exports.TriageOption || (exports.TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").miner.blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            if (transaction.to == null &&\n                transaction.data &&\n                __classPrivateFieldGet(this, _TransactionPool_options, \"f\").chain.allowUnlimitedInitCodeSize === false &&\n                __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(3860) &&\n                // this is contract creation transaction and it is subject to EIP-3860\n                // which limits the size of initcode to 49152\n                transaction.data.valueOf().length > 49152) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INITCODE_TOO_LARGE, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.miner.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = ethereum_block_1.Block.calcNextBaseFee(__classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest);\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\nexports.default = TransactionPool;\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector extends emittery_1.default {\n    constructor(providerOptions = null, executor) {\n        super();\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n        // no need to wait for #provider.once(\"connect\") as the initialize()\n        // promise has already accounted for that after the promise is resolved\n        await this.emit(\"ready\");\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_wallet, _EthereumProvider_executor, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        /**\n         * Disconnect the provider instance. This will cause the underlying blockchain to be stopped, and any pending\n         * tasks to be rejected. Emits a `disconnect` event once successfully disconnected.\n         * @returns Fullfills with `undefined` once the provider has been disconnected.\n         */\n        this.disconnect = async () => {\n            // executor.stop() will stop accepting new tasks, but will not wait for inflight tasks. These may reject with\n            // (unhelpful) internal errors. See https://github.com/trufflesuite/ganache/issues/3499\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_options, \"f\").logging.logger.close();\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").end();\n            this.emit(\"disconnect\");\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet, providerOptions.logging), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:console.log\", event => {\n            this.emit(\"ganache:vm:tx:console.log\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst trie_db_1 = require(\"./trie-db\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const databaseOptions = __classPrivateFieldGet(this, _Database_options, \"f\").database;\n            const store = databaseOptions.db;\n            let db;\n            let shouldTryMigrate = false;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n                shouldTryMigrate = true;\n            }\n            else {\n                let directory = databaseOptions.dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                else {\n                    shouldTryMigrate = true;\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            const sublevelTrie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.trie = new trie_db_1.TrieDB(sublevelTrie);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            // only migrate if we were given a dbPath or a user-defined db\n            if (shouldTryMigrate) {\n                await this.runMigrations();\n            }\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Handles migrating the db from one version to another.\n     * @returns\n     */\n    async runMigrations() {\n        let version;\n        try {\n            // note: we only add a version\n            version = await this.db.get(utils_1.VERSION_KEY);\n        }\n        catch {\n            /* not found */\n        }\n        // we've shipped two versions:\n        //  * no version at all (referred to as \"version `null`\")\n        //  * and version: `BUFFER_ZERO` (the first versioned version)\n        // Since we only have the one version we can be lazy right now and just\n        // check if it exists.\n        if (version)\n            return;\n        const logger = __classPrivateFieldGet(this, _Database_options, \"f\").logging.logger;\n        logger.log(\"Migrating database from version `null` to `0`…\");\n        const ops = [\n            //#region MIGRATION 0a\n            // update the db with the version.\n            // since this was not an original field, adding a version if a migration in\n            // and of itself. Future migrations will need conditionally check the\n            // version to apply relevant migrations.\n            { type: \"put\", key: utils_1.VERSION_KEY, value: utils_1.BUFFER_ZERO }\n            //#endregion MIGRATION 0a\n        ];\n        //#region MIGRATION 0b\n        // ============\n        // Fix the `size` field of blocks.\n        //\n        // This migration fixes a bug in version `null` that caused us to compute\n        // the `size` of blocks incorrectly. We save the size to the db, so we need\n        // to recompute it and re-save for all blocks:\n        const stream = this.blocks.createReadStream();\n        const prefix = Buffer.from(this.blocks.db.db.prefix);\n        for await (const data of stream) {\n            const { key, value } = data;\n            ops.push({\n                type: \"put\",\n                key: Buffer.concat([prefix, key]),\n                value: ethereum_block_1.Block.migrate(value)\n            });\n        }\n        //#endregion MIGRATION 0b\n        // save all in one atomic operation:\n        await this.db.batch(ops);\n        logger.log(\"Migration complete\");\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\nexports.default = Database;\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\n//# sourceMappingURL=database.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3482\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\nexports.default = BlockLogManager;\n_BlockLogManager_blockchain = new WeakMap();\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            return (0, ethereum_transaction_1.serializeRpcForDb)(tx, blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\nexports.default = TransactionManager;\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entries from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap(), _PromiseQueue_tryResolve = new WeakMap(), _PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst trie_2 = require(\"@ethereumjs/trie\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst trie_db_1 = require(\"../trie-db\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        let metadataDB = MetadataSingletons.get(db);\n        if (!metadataDB) {\n            metadataDB = db.sublevel(\"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDB);\n        }\n        this.metadataDB = metadataDB;\n        this.checkpointedMetadata = new trie_2.CheckpointDB(new trie_db_1.TrieDB(this.metadataDB));\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.checkpointedMetadata.checkpoint(this.root());\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.checkpointedMetadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.checkpointedMetadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadataDB;\n        const stream = db.createKeyStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const key of stream) {\n            batch.del(key);\n        }\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3483\n        const { checkpoints } = this.checkpointedMetadata;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        // Issue: https://github.com/trufflesuite/ganache/issues/3484\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    // note: this function is a slightly modified version of\n    // https://github.com/ethereumjs/ethereumjs-monorepo/blob/34f3dcdf37d2fbeffeb41dc3de693f59b91c46bc/packages/trie/src/trie/trie.ts#L218\n    async del(key) {\n        await this._lock.acquire();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.checkpointedMetadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n        }\n        this._lock.release();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new ForkTrie(this.db.copy(), this.root(), this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n            // Our metadata checkpoints need to be the same reference to the\n            // parent's metadata checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.checkpointedMetadata.checkpoints =\n                this.checkpointedMetadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\nexports.default = TransactionReceiptManager;\n_TransactionReceiptManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst abort_controller_1 = __importDefault(require(\"abort-controller\"));\nconst common_1 = require(\"@ethereumjs/common\");\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nconst common_helpers_1 = require(\"../helpers/common-helpers\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new abort_controller_1.default());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.Common.custom({\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            }, { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(this.common);\n            }\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            if (options.blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (Number.isInteger(options.blockNumber) &&\n                options.blockNumber >= 0) {\n                const blockNumber = utils_1.Quantity.from(options.blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, blockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, blockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (options.blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = blockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlock(this.common, {\n            timestamp: BigInt(block.timestamp),\n            number: BigInt(block.number)\n        });\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId` (hardforks are applied if they are scheduled on the\n     * given chain on or after the blocknumber or timestamp of the given `block`).\n     * If the remote chain's `chainId` is not \"known\", return a `Common` with our\n     * local `common`'s rules applied, but with the remote chain's `chainId`. If\n     * the block is greater than or equal to our `fork.blockNumber` return\n     * `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlock(common, block) {\n        if (block.number <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            let forkCommon;\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.timestamp) {\n                        const hfTimestamp = BigInt(hf.timestamp);\n                        if (block.timestamp >= hfTimestamp) {\n                            hardfork = hf.name;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else if (hf.block) {\n                        if (block.number >= BigInt(hf.block)) {\n                            hardfork = hf.name;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                forkCommon = new common_1.Common({ chain: this.chainId, hardfork });\n            }\n            else {\n                // we don't know about this chain or hardfork, so just carry on per usual,\n                // but with the fork's chainId (instead of our local chainId)\n                forkCommon = common_1.Common.custom({\n                    chainId: this.chainId,\n                    defaultHardfork: common.hardfork()\n                }, { baseChain: 1 });\n            }\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(forkCommon);\n            }\n            return forkCommon;\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\nexports.default = HttpServer;\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"goerli\",\n    \"görli\",\n    \"sepolia\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\") {\n                if (\"url\" in rawInput) {\n                    const { url } = rawInput;\n                    if (url === true) {\n                        return \"mainnet\";\n                    }\n                    else if (exports.KNOWN_NETWORKS.includes(url)) {\n                        return rawInput.url;\n                    }\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n    \nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n \nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because `@ganache/filecoin`\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // instanceof to fail here. Since we know `resultEmitter` is MergePromiseT\n                    // we can safely assume that if `on` is a function, then we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\nexports.default = WebsocketServer;\n_WebsocketServer_connections = new WeakMap();\n//# sourceMappingURL=ws-server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Stop processing requests. We pass this call through to the requestCoordinator, which means that api\n     * validation will continue to work after calling stop() in execute().\n     */\n    stop() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").stop();\n    }\n    /**\n     * Finalise shutdown of the underlying RequestCoordinator.\n     */\n    end() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").end();\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // The function referenced by requestcoordinator.queue will be changed\n                    // when requestCoordinator.stop() is called. Ensure that no references\n                    // to the function are held, otherwise internal errors may be\n                    // surfaced.\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${String(methodName)} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current\n                    .execute()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const execute is `async` to force the return value into a Promise.\n                const execute = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push({ execute, reject });\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n    /**\n     * Stop processing tasks - calls to queue(), and resume() will reject with an\n     * error indicating that Ganache is disconnected. This is an irreversible\n     * action. If you wish to be able to resume processing, use pause() instead.\n     *\n     * Note: this changes the references of this.resume and this.queue. Any code\n     * that maintains references to the values referenced by this.resume or\n     * this.queue, could have unintended consequences after calling this.stop().\n     */\n    stop() {\n        this.pause();\n        this.resume = () => {\n            throw new Error(\"Cannot resume processing requests, Ganache is disconnected.\");\n        };\n        this.queue = async () => {\n            throw new Error(\"Cannot process request, Ganache is disconnected.\");\n        };\n    }\n    /**\n     * Finalise shutdown of the RequestCoordinator. Rejects all pending tasks in order. Should be\n     * called after all in-flight tasks have resolved in order to maintain overall FIFO order.\n     */\n    end() {\n        while (this.pending.length > 0) {\n            this.pending\n                .shift()\n                .reject(new Error(\"Cannot process request, Ganache is disconnected.\"));\n        }\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OptionsConfig_defaults;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(options, target, def, namespace) {\n    const config = (target[namespace] = target[namespace] || {});\n    const flavor = options.flavor;\n    const suppliedOptions = new Set();\n    const entries = Object.entries(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (const [key, propDefinition] of entries) {\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value, config);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value, config);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config, flavor);\n                }\n            }\n        }\n    }\n    else {\n        for (const [key, propDefinition] of entries) {\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value, config);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config, flavor);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        _OptionsConfig_defaults.set(this, void 0);\n        __classPrivateFieldSet(this, _OptionsConfig_defaults, defaults, \"f\");\n    }\n    normalize(options) {\n        const out = {};\n        Object.entries(__classPrivateFieldGet(this, _OptionsConfig_defaults, \"f\")).forEach(([namespace, definition]) => {\n            fill(options, out, definition, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n_OptionsConfig_defaults = new WeakMap();\n//# sourceMappingURL=create.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.database().get(codeHash).then(utils_1.Data.from);\n    }\n}\nexports.default = AccountManager;\n_AccountManager_blockchain = new WeakMap();\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecsignLegacy = exports.ecsign = void 0;\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nfunction ecsign(msgHash, privateKey) {\n    const output = {\n        signature: new Uint8Array(64),\n        recid: null\n    };\n    const status = secp256k1_1.default.ecdsaSign(output, msgHash, privateKey);\n    if (status !== 0) {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n    const { signature, recid } = output;\n    const buffer = signature.buffer;\n    const r = Buffer.from(buffer, 0, 32);\n    const s = Buffer.from(buffer, 32, 32);\n    const v = BigInt(recid);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction ecsignLegacy(msgHash, privateKey, chainId) {\n    const { v, r, s } = ecsign(msgHash, privateKey);\n    const legacyV = chainId === undefined ? v + 27n : v + 35n + BigInt(chainId) * 2n;\n    return { r, s, v: legacyV };\n}\nexports.ecsignLegacy = ecsignLegacy;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"finalized\"] = \"finalized\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"safe\"] = \"safe\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag = exports.InternalTag || (exports.InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.earliest = \"earliest\";\n    Tag.finalized = \"finalized\";\n    Tag.latest = \"latest\";\n    Tag.safe = \"safe\";\n    Tag.pending = \"pending\";\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new bn_js_1.default(val);\nconst STIPEND = bn(2300);\nconst bigIntToBN = (val) => {\n    return new bn_js_1.default(val.toString());\n};\nconst MULTIPLE = 64 / 63;\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: (info) => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = [...info.stack];\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: (index) => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = async (generateVM, runArgs, callback) => {\n    const vm = await generateVM();\n    exactimate(vm, runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = bigIntToBN(runArgs.block.header.gasLimit);\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? bigIntToBN(result.gasEstimate + gasRefund)\n        : bigIntToBN(result.gasEstimate);\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = await generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = utils_1.Quantity.toBigInt(gas.toArrayLike(Buffer));\n        await vm.stateManager.checkpoint();\n        const result = await vm\n            .runTx(runArgs)\n            .catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !(\"vmerr\" in result) && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = utils_1.Quantity.toBigInt(range.hi.toArrayLike(Buffer));\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.evm.events.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = bigIntToBN(op.gasLeft - next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: (val) => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: (val) => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: (sixtyFloorth) => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                const range = steps.ops[base || compositeContext ? start : start + 1].gasLeft -\n                    steps.ops[stop].gasLeft;\n                // only occurs on stack increasing ops\n                addGas(bigIntToBN(range).add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = bigIntToBN(steps.ops[stop - 1].gasLeft - steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !(op.stack[op.stack.length - 3] === 0n)) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = bigIntToBN(next.gasLeft - steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    const feeBn = bn(current.opcode.fee);\n                    context.addRange(feeBn);\n                    stack.push(context);\n                    context = Context(currentIndex, feeBn); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm\n        .runTx(runArgs)\n        .catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    if (\"vmerr\" in result) {\n        const vmerr = result.vmerr;\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else {\n        const ret = result;\n        if (steps.done()) {\n            const estimate = result.totalGasSpent;\n            ret.gasEstimate = estimate;\n        }\n        else {\n            const gasLeftStart = steps.ops[0].gasLeft;\n            const gasLeftEnd = steps.ops[steps.ops.length - 1].gasLeft;\n            const actualUsed = bigIntToBN(gasLeftStart - gasLeftEnd);\n            const sixtyFloorths = getTotal().sub(actualUsed);\n            ret.gasEstimate =\n                result.totalGasSpent +\n                    utils_1.Quantity.toBigInt(sixtyFloorths.toArrayLike(Buffer));\n        }\n        callback(null, ret);\n    }\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        // Issue: https://github.com/trufflesuite/ganache/issues/3480\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { fork: { url, origin }, logging } = options;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection, logging);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // Issue: https://github.com/trufflesuite/ganache/issues/3476\n            // TODO: backoff and eventually fail\n            // Issue: https://github.com/trufflesuite/ganache/issues/3477\n            this.open = this.connect(this.connection, logging);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            // Issue: https://github.com/trufflesuite/ganache/issues/3478\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        // Issue: https://github.com/trufflesuite/ganache/issues/3479\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection, logging) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            logging.logger.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinOptionsConfig = exports.FilecoinDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.FilecoinDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions\n};\nexports.FilecoinOptionsConfig = new options_1.OptionsConfig(exports.FilecoinDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: () => 10,\n        cliAliases: [\"a\"],\n        cliType: \"number\"\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\"],\n        cliType: \"boolean\",\n        conflicts: [\"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        cliAliases: [\"s\"],\n        cliType: \"string\",\n        conflicts: [\"deterministic\"]\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in FIL.\",\n        default: () => 100,\n        cliAliases: [\"b\"],\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst constants_1 = require(\"./constants\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param prop - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise `false`.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode = exports.JsonRpcErrorCode || (exports.JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst flavors_1 = require(\"@ganache/flavors\");\nconst flavors_2 = require(\"@ganache/flavors\");\nconst initialize = (options = {\n    flavor: flavors_1.DefaultFlavor,\n    chain: { asyncRequestProcessing: true }\n}) => {\n    const flavor = (options.flavor || flavors_1.DefaultFlavor);\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options && \"asyncRequestProcessing\" in options[\"chain\"]) {\n        asyncRequestProcessing = options.chain.asyncRequestProcessing;\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options.asyncRequestProcessing;\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const connector = (0, flavors_2.GetConnector)(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    // TODO: remove the `connector.connect ? ` check and just use\n    // `connector.connect()` after publishing the `@ganache/filecoin` with the\n    // connector.connect interface\n    const connectPromise = connector.connect\n        ? connector.connect()\n        : connector.initialize();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    // The function referenced by requestcoordinator.resume will be changed when\n    // requestCoordinator.stop() is called. Ensure that no references to the\n    // function are held, otherwise internal errors may be surfaced.\n    return {\n        connector,\n        promise: connectPromise.then(() => requestCoordinator.resume())\n    };\n};\n/**\n * Loads the connector specified by the given `flavor`\n */\nexports.default = {\n    initialize\n};\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES = exports.RETURN_TYPES || (exports.RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            // in some failure scenarios, like when the initcode is too large,\n            // `runState` is undefined. In that case, we'll use `undefined` for the\n            // programCounter.\n            programCounter: execResult.runState?.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes = exports.FilterTypes || (exports.FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_block_1 = require(\"./runtime-block\");\nconst utils_2 = require(\"@ganache/utils\");\nconst serialize_1 = require(\"./serialize\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            let totalDifficulty;\n            // if there are 7 serialized fields we are after shanghai\n            // as in shanghai we added `withdrawals` to the block data\n            if (deserialized.length === 7) {\n                this._rawWithdrawals = deserialized[3] || []; // added in Shanghai\n                totalDifficulty = deserialized[4];\n                this._rawTransactionMetaData = deserialized[5] || [];\n                this._size = utils_1.Quantity.toNumber(deserialized[6]);\n            }\n            else {\n                this._rawWithdrawals = null;\n                totalDifficulty = deserialized[3];\n                this._rawTransactionMetaData = (deserialized[4] || []);\n                this._size = utils_1.Quantity.toNumber(deserialized[5]);\n            }\n            this.header = (0, runtime_block_1.makeHeader)(this._raw, totalDifficulty);\n        }\n    }\n    /**\n     * Migrates a serialized Block to the latest version. This should only be\n     * called on serialized data from blocks created before v7.8.0.\n     *\n     * This migration updates the `size` value of the block to the correct value\n     * by re-serializing the block for storage in the db.\n     * @param serialized\n     * @returns\n     */\n    static migrate(serialized) {\n        const deserialized = (0, rlp_1.decode)(serialized);\n        const start = deserialized.slice(0, 3);\n        start[1] = start[1].map((oldRawTx) => {\n            if (oldRawTx.length === 9) {\n                return oldRawTx; // legacy transactions are fine\n            }\n            else {\n                // `type` is always `< 0x7F`, so we can yank the first byte from the\n                // Buffer without having to think about conversion.\n                // https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n                const type = oldRawTx[0][0];\n                const raw = oldRawTx.slice(1);\n                // type 1 and 2 transactions were encoded within the block as:\n                // `[type, ...rawTx]` when they should have been `[type, encode(rawTx)]`\n                return (0, ethereum_transaction_1.encodeWithPrefix)(type, raw);\n            }\n        });\n        return (0, serialize_1.serialize)(start, deserialized.slice(3, 5)).serialized;\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        const blockHash = this.hash().toBuffer();\n        const number = this.header.number.toBuffer();\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                blockHash,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const transactions = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas?.toBigInt());\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions,\n            uncles: [],\n            // if `this._rawWithdrawals` is not set we should not include it in the\n            // JSON response (`undefined` gets stripped when JSON.stringify is called).\n            withdrawals: this._rawWithdrawals?.map(serialize_1.convertRawWithdrawals)\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? null : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toBigInt()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(1, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[8] = this.v.toBuffer();\n        raw[9] = this.r.toBuffer();\n        raw[10] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(1, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? null : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas.toBigInt(),\n            maxFeePerGas: this.maxFeePerGas.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: (baseFee = 0n) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBI = maxPriorityFeePerGas.toBigInt();\n                const maxFeePerGasBI = maxFeePerGas.toBigInt();\n                const gasLimitBI = gas.toBigInt();\n                const valueBI = value.toBigInt();\n                const inclusionFeePerGas = bigIntMin(maxPriorityFeePerGasBI, maxFeePerGasBI - baseFee);\n                const gasPrice = inclusionFeePerGas + baseFee;\n                return gasLimitBI * gasPrice + valueBI;\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(2, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(2, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGas;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGas + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? null : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            common: this.common,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = utils_1.Quantity.toBuffer(this.common.chainId());\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey, this.common.chainId());\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is the rlp encoded raw data\n        this.serialized = (0, rlp_1.digest)(ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.makeHeader = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst serialize_1 = require(\"./serialize\");\nconst block_1 = require(\"./block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false),\n        withdrawalsRoot: raw[16] === undefined ? undefined : utils_1.Data.from(raw[16], 32)\n    };\n}\nexports.makeHeader = makeHeader;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(common, number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, mixHash, baseFeePerGas, withdrawalsRoot) {\n        this._common = common;\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: coinbase,\n            number: number.toBigInt(),\n            difficulty: difficulty.toBigInt(),\n            totalDifficulty: utils_1.Quantity.toBuffer(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()),\n            gasLimit: gasLimit.toBigInt(),\n            gasUsed: gasUsed.toBigInt(),\n            timestamp: timestamp.toBigInt(),\n            baseFeePerGas,\n            mixHash,\n            prevRandao: mixHash,\n            withdrawalsRoot,\n            // fixes https://github.com/trufflesuite/ganache/issues/4359\n            cliqueSigner: () => coinbase\n        };\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            utils_1.Quantity.toBuffer(header.difficulty),\n            utils_1.Quantity.toBuffer(header.number),\n            utils_1.Quantity.toBuffer(header.gasLimit),\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            utils_1.Quantity.toBuffer(header.timestamp),\n            extraData.toBuffer(),\n            header.mixHash,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        const isEip4895 = this._common.isActivatedEIP(4895);\n        // baseFeePerGas was added in London\n        if (header.baseFeePerGas !== undefined) {\n            rawHeader[15] = utils_1.Quantity.toBuffer(header.baseFeePerGas, false);\n            // withdrawalsRoot was added in Shanghai\n            if (isEip4895)\n                rawHeader[16] = utils_1.Data.toBuffer(header.withdrawalsRoot);\n        }\n        const { totalDifficulty } = header;\n        const txs = Array(transactions.length);\n        const extraTxs = Array(transactions.length);\n        for (let i = 0; i < transactions.length; i++) {\n            const tx = transactions[i];\n            txs[i] =\n                tx.raw.length === 9\n                    ? tx.raw // legacy transactions don't have their own encoding\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[i] = [tx.from.toBuffer(), tx.hash.toBuffer()];\n        }\n        const rawBlock = isEip4895\n            ? [rawHeader, txs, [], []]\n            : [rawHeader, txs, []];\n        const { serialized, size } = (0, serialize_1.serialize)(rawBlock, [\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, this._common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = makeHeader(rawHeader, totalDifficulty);\n        block._rawWithdrawals = [];\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block: block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.storageRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: account.nonce,\n            balance: account.balance,\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: event.gasLeft,\n        gasRefund: event.gasRefund,\n        memory,\n        memoryWordCount: event.memoryWordCount,\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(r => r),\n        stack: event.stack.map(s => s)\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\n/*!\n * @ganache/console.log\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nvar maybe_get_logs_1 = require(\"./src/maybe-get-logs\");\nObject.defineProperty(exports, \"maybeGetLogs\", { enumerable: true, get: function () { return maybe_get_logs_1.maybeGetLogs; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheStateManager = void 0;\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nclass GanacheStateManager extends statemanager_1.DefaultStateManager {\n    async getStorageTrie(address) {\n        return await this._getStorageTrie({ buf: address });\n    }\n}\nexports.GanacheStateManager = GanacheStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst keyHashingFunction = (msg) => {\n    return (0, utils_1.keccak)(Buffer.from(msg.buffer, msg.byteOffset, msg.length));\n};\nclass GanacheTrie extends trie_1.Trie {\n    constructor(db, root, blockchain) {\n        super({\n            db,\n            root,\n            useRootPersistence: true,\n            useKeyHashing: true,\n            useKeyHashingFunction: keyHashingFunction\n        });\n        this.blockchain = blockchain;\n        this.db = db;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root(stateRoot);\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new GanacheTrie(this.db.copy(), this.root(), this.blockchain);\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.changeCommonParamValue = exports.removeEIP3860InitCodeSizeLimitCheck = void 0;\n/**\n * Effectively removes the 3860 InitCode Size Limit check by increasing the init\n * code size to Number.MAX_SAFE_INTEGER.\n *\n * This number works because an initcode can practically never be that large\n * (approx 9 PetaBytes!).\n *\n * @param common\n * @returns\n */\nfunction removeEIP3860InitCodeSizeLimitCheck(common) {\n    // this is a hack until EJS ships `allowUnlimitedInitCodeSize` option https://github.com/ethereumjs/ethereumjs-monorepo/issues/2588\n    return changeCommonParamValue(common, 3860, \"vm\", \"maxInitCodeSize\", \n    // we'd use Infinity if we could, but that's not a valid BigInt\n    BigInt(Number.MAX_SAFE_INTEGER));\n}\nexports.removeEIP3860InitCodeSizeLimitCheck = removeEIP3860InitCodeSizeLimitCheck;\nfunction changeCommonParamValue(common, eip, topic, name, value) {\n    const original = common.paramByEIP.bind(common);\n    common.paramByEIP = function (paramTopic, paramName, paramEip) {\n        if (paramTopic === topic && paramName === name && paramEip === eip) {\n            return value;\n        }\n        return original.call(common, paramTopic, paramName, paramEip);\n    };\n}\nexports.changeCommonParamValue = changeCommonParamValue;\n//# sourceMappingURL=common-helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverOptionsConfig = exports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\nexports.serverOptionsConfig = new options_1.OptionsConfig(exports.serverDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\",\n    \"grayGlacier\",\n    \"merge\",\n    \"shanghai\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    allowUnlimitedInitCodeSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited initcode (`transaction.data`) sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"shanghai\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst fs_1 = require(\"fs\");\nconst utils_1 = require(\"@ganache/utils\");\nconst os_1 = require(\"os\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable writing logs to `logger.log` (`stdout` by default).\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log detailed RPC requests.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    },\n    file: {\n        normalize: (raw) => {\n            let descriptor;\n            try {\n                descriptor = (0, fs_1.openSync)(raw, \"a\");\n            }\n            catch (err) {\n                const details = err.message;\n                throw new Error(`Failed to open log file ${raw}. Please check if the file path is valid and if the process has write permissions to the directory.${os_1.EOL}${details}`);\n            }\n            return descriptor;\n        },\n        cliDescription: \"The file to append logs to.\",\n        cliType: \"string\"\n    },\n    logger: {\n        normalize: (logger, config) => {\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger: logger\n            });\n        },\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: config => {\n            const baseLogger = config.quiet ? { log: () => { } } : console;\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger\n            });\n        },\n        legacyName: \"logger\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\n// The `normalize` property expects a function with a signature of\n// `normalize(value, config)`, but `Quantity.from(value, nullable)` doesn't\n// match, so we wrap the `from` method in a function that matches the signature.\n// We only instantiate the wrapper function once to avoid unnecessary function\n// allocations.\nconst normalizeQuantity = value => utils_1.Quantity.from(value);\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the block difficulty. Value is always 0 after the merge hardfork.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=connector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.min = exports.max = void 0;\n/**\n * Returns the largest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the largest value will be selected and returned.\n */\nconst max = (...numbers) => numbers.reduce((acc, next) => (next > acc ? next : acc));\nexports.max = max;\n/**\n * Returns the smallest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the smallest value will be selected and returned.\n */\nconst min = (...numbers) => numbers.reduce((acc, next) => (next < acc ? next : acc));\nexports.min = min;\n//# sourceMappingURL=min-max.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogger = void 0;\nconst fs_1 = require(\"fs\");\nconst util_1 = require(\"util\");\nconst os_1 = require(\"os\");\n// this needs to match start of line with both CRLF and LF encoding (^ matches after _both_ CR and LF)\nconst START_OF_LINE = /^|(?<=\\r?\\n)/g;\nfunction createLogger(config) {\n    const baseLog = (...params) => config.baseLogger.log(...params);\n    if (\"file\" in config && config.file !== undefined) {\n        const fd = config.file;\n        const diskLogFormatter = (message) => {\n            // trailing space after date is delimiter between date and message\n            const linePrefix = `${new Date().toISOString()} `;\n            return message.replace(START_OF_LINE, linePrefix);\n        };\n        const writeStream = (0, fs_1.createWriteStream)(null, { fd });\n        const onError = err => console.error(`Error writing to log file: ${err.message}`);\n        writeStream.on(\"error\", onError);\n        const log = (message, ...optionalParams) => {\n            // we are logging to a file, but we still need to write to console\n            baseLog(message, ...optionalParams);\n            const formattedMessage = (0, util_1.format)(message, ...optionalParams);\n            writeStream.write(diskLogFormatter(formattedMessage) + os_1.EOL);\n        };\n        return {\n            log,\n            close: () => new Promise((resolve, reject) => {\n                writeStream.close(err => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            })\n        };\n    }\n    else {\n        return {\n            log: baseLog,\n            close: async () => { }\n        };\n    }\n}\nexports.createLogger = createLogger;\n//# sourceMappingURL=logger.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.storageRoot = util_1.KECCAK256_RLP;\n        this.codeHash = util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.storageRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.storageRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=account-proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=fee-history.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rpc_transaction_1 = require(\"./rpc-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    /**\n     * Validates the txType against active hardforks and EIPs. May\n     * coerce transactions to a transaction type that differs from the specified\n     * txType. For example, if the txType is EIP2930AccessList but the hardfork\n     * is before EIP-2930 is activated, the txType will be coerced to Legacy.\n     *\n     * @param txData\n     * @param txType\n     * @param common\n     * @param extra\n     * @returns\n     */\n    static _fromUnsafeUserData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData((txData), common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3487\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === rpc_transaction_1.TransactionType.Legacy ||\n                    txType === rpc_transaction_1.TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromUnsafeUserData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case rpc_transaction_1.TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case rpc_transaction_1.TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object without the type field in the first position (for type 1 and 2 txs)\n     *\n     * This method should only be used with \"safe\" data that doesn't need to be validated against the active hardforks or\n     * EIPs. In other words: it should come from a fork, or from the database.\n     *\n     * @tparam txTYpe - The type of txData. Throws if the the type is not supported.\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     * @param extra\n     */\n    static fromSafeTypeAndTxData(txType, txData, common, extra) {\n        switch (txType) {\n            case rpc_transaction_1.TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === rpc_transaction_1.TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, rpc_transaction_1.TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === rpc_transaction_1.TransactionType.EIP1559AccessList ||\n            type === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n    }\n    /**\n     * Pulls the type out of the raw transaction data, which is the first byte of\n     * the raw data, unless the data is a legacy transaction (raw.length === 9),\n     * in which case the type is `0`.\n     *\n     * This does not validate the type, it just returns it.\n     *\n     * @param raw\n     * @returns\n     */\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n        return raw[0][0];\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rawFromRpc = exports.serializeForDb = exports.serializeRpcForDb = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst rpc_transaction_1 = require(\"./rpc-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nfunction serializeRpcForDb(tx, blockHash, blockNumber, transactionIndex) {\n    let type;\n    if (!(\"type\" in tx) || tx.type === undefined) {\n        type = rpc_transaction_1.TransactionType.Legacy;\n    }\n    else {\n        type = parseInt(tx.type, 16);\n    }\n    const txData = {\n        raw: rawFromRpc(tx, type),\n        from: ethereum_address_1.Address.from(tx.from),\n        hash: utils_1.Data.from(tx.hash, 32),\n        // this assumes that gasPrice has been set - even for EIP-1559 Fee Market transactions\n        effectiveGasPrice: utils_1.Quantity.from(tx.gasPrice),\n        type: utils_1.Quantity.from(type)\n    };\n    return serializeForDb(txData, blockHash, blockNumber, transactionIndex);\n}\nexports.serializeRpcForDb = serializeRpcForDb;\nfunction serializeForDb(tx, blockHash, blockNumber, transactionIndex) {\n    const legacy = tx.raw.length === 9;\n    // todo(perf):make this work with encodeRange and digest\n    const txAndExtraData = [\n        // todo: this is encoded differently in the tx table than it is in the\n        // block table. we should migrate the tx table to use the same format as\n        // the block (`Buffer.concat([type, encode(raw)])`) so that we can avoid\n        // block it twice for each block save step.\n        legacy ? tx.raw : [tx.type.toBuffer(), ...tx.raw],\n        [\n            tx.from.buf,\n            tx.hash.toBuffer(),\n            blockHash.toBuffer(),\n            blockNumber.toBuffer(),\n            transactionIndex.toBuffer(),\n            tx.effectiveGasPrice.toBuffer()\n        ]\n    ];\n    return (0, rlp_1.encode)(txAndExtraData);\n}\nexports.serializeForDb = serializeForDb;\nfunction rawFromRpc(txData, txType) {\n    const chainId = utils_1.Quantity.toBuffer(txData.chainId);\n    const nonce = utils_1.Quantity.toBuffer(txData.nonce);\n    const gasPrice = utils_1.Quantity.toBuffer(txData.gasPrice);\n    const gasLimit = utils_1.Quantity.toBuffer(txData.gas || txData.gasLimit);\n    // todo: use Address type\n    const to = utils_1.Data.toBuffer(txData.to, 20);\n    const value = utils_1.Quantity.toBuffer(txData.value);\n    const data = utils_1.Data.toBuffer(txData.data || txData.input);\n    const v = utils_1.Data.toBuffer(txData.v);\n    const r = utils_1.Data.toBuffer(txData.r);\n    const s = utils_1.Data.toBuffer(txData.s);\n    // if no access list is provided, we convert to legacy\n    const targetType = txType === rpc_transaction_1.TransactionType.EIP2930AccessList &&\n        txData.accessList === undefined\n        ? rpc_transaction_1.TransactionType.Legacy\n        : txType;\n    switch (targetType) {\n        case rpc_transaction_1.TransactionType.Legacy:\n            return [nonce, gasPrice, gasLimit, to, value, data, v, r, s];\n        case rpc_transaction_1.TransactionType.EIP2930AccessList:\n            return [\n                chainId,\n                nonce,\n                gasPrice,\n                gasLimit,\n                to,\n                value,\n                data,\n                // accesslists is _always_ set, otherwise it's legacy\n                txData.accessList\n                    ? access_lists_1.AccessLists.getAccessListData(txData.accessList).accessList\n                    : [],\n                v,\n                r,\n                s\n            ];\n        // todo: should this be TransactionType.EIP1559FeeMarket?\n        case rpc_transaction_1.TransactionType.EIP1559AccessList:\n            return [\n                chainId,\n                nonce,\n                utils_1.Quantity.toBuffer(txData.maxPriorityFeePerGas),\n                utils_1.Quantity.toBuffer(txData.maxFeePerGas),\n                gasLimit,\n                to,\n                value,\n                data,\n                txData.accessList\n                    ? access_lists_1.AccessLists.getAccessListData(txData.accessList).accessList\n                    : [],\n                v,\n                r,\n                s\n            ];\n        default:\n            throw new ethereum_utils_1.CodedError(\"Tx instantiation with supplied type not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n}\nexports.rawFromRpc = rawFromRpc;\n//# sourceMappingURL=transaction-serialization.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${String(propertyKey)}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nconst handlers_1 = require(\"./handlers\");\nconst signatures_1 = require(\"./signatures\");\nconst CONSOLE_ADDRESS = 0x636f6e736f6c652e6c6f67n;\n/**\n * Returns arguments passed to console.sol's `console.log` if the given\n * `@ethereumjs/vm` step event's `opcode`, `stack`, and `memory` fields contain\n * valid `console.log` data.\n *\n * The event's `opcode.name` field must be `\"STATICCALL\"` and the `toAddress` on\n * the `stack` must be the `console.log` address:\n * `0x000000000000000000636f6e736f6c652e6c6f67`.\n *\n * @param event - `@ethereumjs/vm` step event\n * @returns\n */\nconst maybeGetLogs = (event) => {\n    if (event.opcode.name !== \"STATICCALL\")\n        return null;\n    // STATICCALL, which is the OPCODE that is used to initiate a console.log, has\n    // 6 params, but we only care about these 3:\n    const stack = event.stack;\n    const [memoryLength, memoryOffset, toAddress] = stack.slice(-4, -1);\n    // only if the toAddress is our console address we should try parsing\n    if (toAddress !== CONSOLE_ADDRESS)\n        return null;\n    // STATICCALL allows for passing in invalid pointers and lengths so we need to\n    // guard against failures with a try/catch\n    try {\n        const memoryStart = Number(memoryOffset);\n        const memoryEnd = memoryStart + Number(memoryLength);\n        const memory = event.memory.subarray(memoryStart, memoryEnd);\n        const method = memory.readUInt32BE(0); // 4 bytes wide\n        const handlers = signatures_1.signatureMap.get(method);\n        if (!handlers)\n            return null;\n        // we skip the first 4 bytes, as that is our signature\n        const values = memory.subarray(4);\n        return handlers.map((handler, index) => {\n            const offset = index * handlers_1.WORD_SIZE;\n            return handler(values, offset);\n        });\n    }\n    catch {\n        return null;\n    }\n};\nexports.maybeGetLogs = maybeGetLogs;\n//# sourceMappingURL=maybe-get-logs.js.map","\"use strict\";\n/*\n * This file was automatically generated by `./src/chains/ethereum/console.log/scripts/generate.ts`; do not edit. */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureMap = void 0;\nconst handlers_1 = require(\"./handlers\");\nexports.signatureMap = new Map([\n    // log()\n    [1368866505, []],\n    // log(address)\n    [741264322, [handlers_1.address]],\n    // log(bool)\n    [843419373, [handlers_1.bool]],\n    // log(string)\n    [1093685164, [handlers_1.string]],\n    // log(uint256)\n    [4163653873, [handlers_1.uint256]],\n    // log(uint)\n    [4122065833, [handlers_1.uint256]],\n    // log(bytes)\n    [199720790, [handlers_1.bytes]],\n    // log(int256)\n    [760966329, [handlers_1.int256]],\n    // log(int)\n    [1309416733, [handlers_1.int256]],\n    // log(bytes1)\n    [1847107880, [(0, handlers_1.fixedBytes)(1)]],\n    // log(bytes2)\n    [3921027734, [(0, handlers_1.fixedBytes)(2)]],\n    // log(bytes3)\n    [763578662, [(0, handlers_1.fixedBytes)(3)]],\n    // log(bytes4)\n    [3764340945, [(0, handlers_1.fixedBytes)(4)]],\n    // log(bytes5)\n    [2793701517, [(0, handlers_1.fixedBytes)(5)]],\n    // log(bytes6)\n    [2927928721, [(0, handlers_1.fixedBytes)(6)]],\n    // log(bytes7)\n    [1322614312, [(0, handlers_1.fixedBytes)(7)]],\n    // log(bytes8)\n    [1334060334, [(0, handlers_1.fixedBytes)(8)]],\n    // log(bytes9)\n    [2428341456, [(0, handlers_1.fixedBytes)(9)]],\n    // log(bytes10)\n    [20780939, [(0, handlers_1.fixedBytes)(10)]],\n    // log(bytes11)\n    [67127854, [(0, handlers_1.fixedBytes)(11)]],\n    // log(bytes12)\n    [2258660029, [(0, handlers_1.fixedBytes)(12)]],\n    // log(bytes13)\n    [2488442420, [(0, handlers_1.fixedBytes)(13)]],\n    // log(bytes14)\n    [2456219775, [(0, handlers_1.fixedBytes)(14)]],\n    // log(bytes15)\n    [3667227872, [(0, handlers_1.fixedBytes)(15)]],\n    // log(bytes16)\n    [1717330180, [(0, handlers_1.fixedBytes)(16)]],\n    // log(bytes17)\n    [866084666, [(0, handlers_1.fixedBytes)(17)]],\n    // log(bytes18)\n    [3302112666, [(0, handlers_1.fixedBytes)(18)]],\n    // log(bytes19)\n    [1584093747, [(0, handlers_1.fixedBytes)(19)]],\n    // log(bytes20)\n    [1367925737, [(0, handlers_1.fixedBytes)(20)]],\n    // log(bytes21)\n    [3923391840, [(0, handlers_1.fixedBytes)(21)]],\n    // log(bytes22)\n    [3589990556, [(0, handlers_1.fixedBytes)(22)]],\n    // log(bytes23)\n    [2879508237, [(0, handlers_1.fixedBytes)(23)]],\n    // log(bytes24)\n    [4055063348, [(0, handlers_1.fixedBytes)(24)]],\n    // log(bytes25)\n    [193248344, [(0, handlers_1.fixedBytes)(25)]],\n    // log(bytes26)\n    [4172368369, [(0, handlers_1.fixedBytes)(26)]],\n    // log(bytes27)\n    [976705501, [(0, handlers_1.fixedBytes)(27)]],\n    // log(bytes28)\n    [3358255854, [(0, handlers_1.fixedBytes)(28)]],\n    // log(bytes29)\n    [1265222613, [(0, handlers_1.fixedBytes)(29)]],\n    // log(bytes30)\n    [3994207469, [(0, handlers_1.fixedBytes)(30)]],\n    // log(bytes31)\n    [3263516050, [(0, handlers_1.fixedBytes)(31)]],\n    // log(bytes32)\n    [666357637, [(0, handlers_1.fixedBytes)(32)]],\n    // log(address,address)\n    [3673216170, [handlers_1.address, handlers_1.address]],\n    // log(address,bool)\n    [1974863315, [handlers_1.address, handlers_1.bool]],\n    // log(address,string)\n    [1973388987, [handlers_1.address, handlers_1.string]],\n    // log(address,uint256)\n    [2198464680, [handlers_1.address, handlers_1.uint256]],\n    // log(address,uint)\n    [574869411, [handlers_1.address, handlers_1.uint256]],\n    // log(bool,address)\n    [2235320393, [handlers_1.bool, handlers_1.address]],\n    // log(bool,bool)\n    [705760899, [handlers_1.bool, handlers_1.bool]],\n    // log(bool,string)\n    [2414527781, [handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256)\n    [965833939, [handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint)\n    [910912146, [handlers_1.bool, handlers_1.uint256]],\n    // log(string,address)\n    [832238387, [handlers_1.string, handlers_1.address]],\n    // log(string,bool)\n    [3283441205, [handlers_1.string, handlers_1.bool]],\n    // log(string,string)\n    [1264337527, [handlers_1.string, handlers_1.string]],\n    // log(string,uint256)\n    [3054400204, [handlers_1.string, handlers_1.uint256]],\n    // log(string,uint)\n    [2534451664, [handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address)\n    [1764191366, [handlers_1.uint256, handlers_1.address]],\n    // log(uint,address)\n    [1491830284, [handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool)\n    [480083635, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool)\n    [510514412, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string)\n    [1681903839, [handlers_1.uint256, handlers_1.string]],\n    // log(uint,string)\n    [262402885, [handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256)\n    [4133908826, [handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint)\n    [1812949376, [handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address)\n    [25986242, [handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,bool)\n    [4070990470, [handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,string)\n    [7426238, [handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,uint256)\n    [402547077, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,uint)\n    [1815506290, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address)\n    [4044790253, [handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool)\n    [3951234194, [handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,string)\n    [555898316, [handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,uint256)\n    [2622462459, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,uint)\n    [742821141, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,address)\n    [4035396840, [handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,string,bool)\n    [3473018801, [handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string)\n    [4218888805, [handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,string,uint256)\n    [1742565361, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint)\n    [484110986, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,address)\n    [2076235848, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,address)\n    [2548867988, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,bool)\n    [1736575400, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,bool)\n    [3846889796, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,string)\n    [2717051050, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,string)\n    [3136907337, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256)\n    [3063663350, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint)\n    [2273710942, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address)\n    [3530962535, [handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,address,bool)\n    [415876934, [handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,string)\n    [3734671984, [handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,address,uint256)\n    [1601936123, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,uint)\n    [3950005167, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address)\n    [276362893, [handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool)\n    [1349555864, [handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,string)\n    [626391622, [handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,uint256)\n    [317855234, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,uint)\n    [2954061243, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,address)\n    [2509355347, [handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,string,bool)\n    [3686056519, [handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string)\n    [2960557183, [handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,string,uint256)\n    [278130193, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint)\n    [3224906412, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,address)\n    [143587794, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,address)\n    [3302110471, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,bool)\n    [3906927529, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,bool)\n    [464374251, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,string)\n    [3288086896, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,string)\n    [3359211184, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256)\n    [923808615, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint)\n    [995886048, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address)\n    [4243355104, [handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,address,bool)\n    [3374145236, [handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,address,string)\n    [3773410639, [handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,address,uint256)\n    [220641573, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,uint)\n    [130552343, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address)\n    [2469116728, [handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool)\n    [2232122070, [handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,string)\n    [3801674877, [handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,uint256)\n    [3378075862, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,uint)\n    [689682896, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,address)\n    [2515337621, [handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,bool)\n    [2967534005, [handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string)\n    [753761519, [handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,uint256)\n    [1478619041, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint)\n    [4083337817, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,address)\n    [478069832, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,address)\n    [3817119609, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,bool)\n    [3396809649, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,bool)\n    [4043501061, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,string)\n    [1500569737, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,string)\n    [2750793529, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256)\n    [3393701099, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint)\n    [2526862595, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address)\n    [3170737120, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address)\n    [2104993307, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,bool)\n    [2607726658, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,bool)\n    [2060456590, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,string)\n    [1674265081, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,address,string)\n    [3464692859, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,uint256)\n    [1520131797, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,uint)\n    [2286109610, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,address)\n    [889741179, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,address)\n    [1112473535, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool)\n    [544310864, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool)\n    [3587091680, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,string)\n    [2239189025, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,string)\n    [2332955902, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,uint256)\n    [537493524, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,uint)\n    [1515034914, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,address)\n    [2063255897, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,string,address)\n    [529592906, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,bool)\n    [1290643290, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,bool)\n    [1185403086, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string)\n    [2970968351, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string)\n    [1062716053, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,uint256)\n    [933920076, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,uint)\n    [1533929535, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,address)\n    [1553380145, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,address)\n    [3191032091, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,bool)\n    [1197922930, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,bool)\n    [1733758967, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,string)\n    [1909476082, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,string)\n    [2104037094, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256)\n    [3522001468, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint)\n    [3884059252, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address,address)\n    [1717301556, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,address,bool)\n    [238520724, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,address,string)\n    [4161329696, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,address,uint256)\n    [2485456247, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,address,uint)\n    [3982404743, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,bool,address)\n    [2669396846, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,address,bool,bool)\n    [752096074, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,address,bool,string)\n    [2858762440, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,address,bool,uint256)\n    [963766156, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,bool,uint)\n    [2513854225, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,string,address)\n    [2406706454, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,address,string,bool)\n    [1863997774, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,address,string,string)\n    [566079269, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,address,string,uint256)\n    [4011651047, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,string,uint)\n    [69767936, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,uint256,address)\n    [2376523509, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint,address)\n    [3603321462, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint256,bool)\n    [2604815586, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint,bool)\n    [3270936812, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint256,string)\n    [4256496016, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint,string)\n    [2647731885, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint256,uint256)\n    [3193255041, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,uint,uint)\n    [1425929188, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,address,address)\n    [1711502813, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(address,bool,address,bool)\n    [2801077007, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(address,bool,address,string)\n    [769095910, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(address,bool,address,uint256)\n    [2807847390, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address,uint)\n    [3698398930, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,bool,address)\n    [3476636805, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool,bool)\n    [3401856121, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,bool,string)\n    [3754205928, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,bool,uint256)\n    [2353946086, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,bool,uint)\n    [3484780374, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,string,address)\n    [436029782, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(address,bool,string,bool)\n    [1353532957, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(address,bool,string,string)\n    [1197235251, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(address,bool,string,uint256)\n    [2162598411, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,string,uint)\n    [2652011374, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,uint256,address)\n    [3438776481, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint,address)\n    [227337758, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint256,bool)\n    [3294903840, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint,bool)\n    [2244855215, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint256,string)\n    [178704301, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint,string)\n    [2606272204, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint256,uint256)\n    [946861556, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,uint,uint)\n    [3255869470, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,address,address)\n    [221706784, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(address,string,address,bool)\n    [233909110, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(address,string,address,string)\n    [4158874181, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(address,string,address,uint256)\n    [1166009295, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,address,uint)\n    [2350461865, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,bool,address)\n    [542667202, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(address,string,bool,bool)\n    [1595759775, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(address,string,bool,string)\n    [3154862590, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(address,string,bool,uint256)\n    [1365129398, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,bool,uint)\n    [3877655068, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,string,address)\n    [2689478535, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(address,string,string,bool)\n    [900007711, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string,string)\n    [1560462603, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(address,string,string,uint256)\n    [362776871, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,string,uint)\n    [2706362425, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint256,address)\n    [1662531192, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint,address)\n    [3755464715, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint256,bool)\n    [251125840, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint,bool)\n    [2116357467, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint256,string)\n    [1149776040, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint,string)\n    [1561552329, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint256,uint256)\n    [499704248, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,uint,uint)\n    [2764647008, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint256,address,address)\n    [1200430178, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint,address,address)\n    [3961816175, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint256,address,bool)\n    [2713504179, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint,address,bool)\n    [4051804649, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint256,address,string)\n    [497649386, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint,address,string)\n    [1567749022, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint256,address,uint256)\n    [269444366, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint,address,uint)\n    [2782496616, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint256,bool,address)\n    [2736520652, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint,bool,address)\n    [602229106, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint256,bool,bool)\n    [1005970743, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint,bool,bool)\n    [4272018778, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint256,bool,string)\n    [3316483577, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint,bool,string)\n    [2391690869, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint256,bool,uint256)\n    [586594713, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint,bool,uint)\n    [1770996626, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint256,string,address)\n    [1547898183, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint,string,address)\n    [3698927108, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint256,string,bool)\n    [3474460764, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint,string,bool)\n    [2751614737, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint256,string,string)\n    [2292761606, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint,string,string)\n    [2119616147, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint256,string,uint256)\n    [3204577425, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint,string,uint)\n    [4111650715, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,uint256,address)\n    [551786573, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,uint,address)\n    [519451700, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,uint256,bool)\n    [1727118439, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,uint,bool)\n    [3964381346, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,uint256,string)\n    [1244184599, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,uint,string)\n    [2301889963, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256,uint256)\n    [888202806, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint,uint)\n    [1024368100, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address,address)\n    [487903233, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(bool,address,address,bool)\n    [1180699616, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,address,string)\n    [3625099623, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(bool,address,address,uint256)\n    [208064958, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,address,uint)\n    [1384430956, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,bool,address)\n    [474063670, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(bool,address,bool,bool)\n    [1788626827, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(bool,address,bool,string)\n    [1248250676, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(bool,address,bool,uint256)\n    [126031106, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,bool,uint)\n    [1287000017, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,string,address)\n    [1870422078, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(bool,address,string,bool)\n    [3804222987, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(bool,address,string,string)\n    [2805734838, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(bool,address,string,uint256)\n    [3256837319, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,string,uint)\n    [194640930, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,uint256,address)\n    [325780957, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint,address)\n    [1760647349, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint256,bool)\n    [3590430492, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint,bool)\n    [4002252402, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint256,string)\n    [1374724088, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint,string)\n    [2691192883, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint256,uint256)\n    [2079424929, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,uint,uint)\n    [2617143996, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,address,address)\n    [4102557348, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,bool,address,bool)\n    [3231908568, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,bool,address,string)\n    [2695133539, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,bool,address,uint256)\n    [1276263767, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address,uint)\n    [1620281063, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,bool,address)\n    [2352126746, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool,bool)\n    [992632032, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,bool,string)\n    [719587540, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,bool,uint256)\n    [1836074433, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,bool,uint)\n    [3259532109, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,string,address)\n    [4188875657, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,bool,string,bool)\n    [3092715066, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,bool,string,string)\n    [1830717265, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,bool,string,uint256)\n    [3819555375, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,string,uint)\n    [395003525, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,uint256,address)\n    [1420274080, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint,address)\n    [201299213, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint256,bool)\n    [1637764366, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint,bool)\n    [2874982852, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint256,string)\n    [2111099104, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint,string)\n    [1348569399, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint256,uint256)\n    [196087467, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,uint,uint)\n    [1181212302, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,address,address)\n    [724244700, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(bool,string,address,bool)\n    [1842623690, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(bool,string,address,string)\n    [316065672, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(bool,string,address,uint256)\n    [2781534868, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,address,uint)\n    [453743963, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,bool,address)\n    [1401816747, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(bool,string,bool,bool)\n    [3697185627, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(bool,string,bool,string)\n    [1211958294, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(bool,string,bool,uint256)\n    [369533843, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,bool,uint)\n    [2372902053, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,string,address)\n    [2547225816, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(bool,string,string,bool)\n    [508266469, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string,string)\n    [392356650, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(bool,string,string,uint256)\n    [2078327787, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,string,uint)\n    [1574643090, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint256,address)\n    [362193358, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint,address)\n    [1529002296, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint256,bool)\n    [1796103507, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint,bool)\n    [549177775, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint256,string)\n    [450457062, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint,string)\n    [2007084013, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint256,uint256)\n    [679886795, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,uint,uint)\n    [2387273838, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint256,address,address)\n    [653615272, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint,address,address)\n    [2318373034, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint256,address,bool)\n    [3032683775, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint,address,bool)\n    [1705899016, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint256,address,string)\n    [464760986, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint,address,string)\n    [403247937, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint256,address,uint256)\n    [355982471, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint,address,uint)\n    [3399820138, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint256,bool,address)\n    [2597139990, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint,bool,address)\n    [1114097656, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint256,bool,bool)\n    [3468031191, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint,bool,bool)\n    [2650928961, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint256,bool,string)\n    [2437143473, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint,bool,string)\n    [3067439572, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256,bool,uint256)\n    [2140912802, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint,bool,uint)\n    [3554563475, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint256,string,address)\n    [4275904511, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint,string,address)\n    [2781285673, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint256,string,bool)\n    [3857124139, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint,string,bool)\n    [2446522387, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint256,string,string)\n    [4122747465, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint,string,string)\n    [3542771016, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint256,string,uint256)\n    [1779538402, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint,string,uint)\n    [1098907931, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,uint256,address)\n    [14518201, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,uint,address)\n    [4049711649, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,uint256,bool)\n    [3197649747, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,uint,bool)\n    [2753397214, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,uint256,string)\n    [2389310301, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,uint,string)\n    [3657852616, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256,uint256)\n    [927708338, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint,uint)\n    [853517604, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address,address)\n    [3985582326, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(string,address,address,bool)\n    [3047013728, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(string,address,address,string)\n    [2148146279, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(string,address,address,uint256)\n    [2398352281, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,address,uint)\n    [1857524797, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,bool,address)\n    [573965245, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(string,address,bool,bool)\n    [2038975531, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(string,address,bool,string)\n    [72663161, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(string,address,bool,uint256)\n    [1050642026, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,bool,uint)\n    [3318856587, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,string,address)\n    [2864486961, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(string,address,string,bool)\n    [1595265676, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(string,address,string,string)\n    [609847026, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(string,address,string,uint256)\n    [2446397742, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,string,uint)\n    [2405583849, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,uint256,address)\n    [1677429701, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint,address)\n    [2741431424, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint256,bool)\n    [4232594928, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint,bool)\n    [1522647356, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint256,string)\n    [1514632754, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint,string)\n    [1280700980, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint256,uint256)\n    [4176812830, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,uint,uint)\n    [3668153533, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,address,address)\n    [870964509, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(string,bool,address,bool)\n    [2508990662, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(string,bool,address,string)\n    [764294052, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(string,bool,address,uint256)\n    [1560853253, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address,uint)\n    [685723286, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,bool,address)\n    [1905304873, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool,bool)\n    [2304440517, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,bool,string)\n    [2636305885, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,bool,uint256)\n    [2386524329, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,bool,uint)\n    [2155164136, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,string,address)\n    [3764542249, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(string,bool,string,bool)\n    [1066037277, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(string,bool,string,string)\n    [2821114603, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(string,bool,string,uint256)\n    [620303461, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,string,uint)\n    [885731469, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,uint256,address)\n    [2472413631, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint,address)\n    [1909687565, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint256,bool)\n    [2331496330, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint,bool)\n    [1019590099, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint256,string)\n    [1949134567, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint,string)\n    [1119461927, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint256,uint256)\n    [1689631591, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,uint,uint)\n    [1572859960, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,address,address)\n    [1134328815, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,string,address,bool)\n    [1556958775, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,string,address,string)\n    [3944480640, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,string,address,uint256)\n    [2093204999, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,address,uint)\n    [1250010474, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,bool,address)\n    [3279013851, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,string,bool,bool)\n    [1081628777, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,string,bool,string)\n    [1585754346, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,string,bool,uint256)\n    [3601791698, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,bool,uint)\n    [2256636538, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,string,address)\n    [1834430276, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,string,bool)\n    [739726573, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string,string)\n    [3731419658, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,string,uint256)\n    [2393878571, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,string,uint)\n    [2681211381, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint256,address)\n    [270792626, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint,address)\n    [1565476480, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint256,bool)\n    [3282609748, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint,bool)\n    [3864418506, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint256,string)\n    [1562023706, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint,string)\n    [2366909661, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint256,uint256)\n    [4099767596, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,uint,uint)\n    [3587119056, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint256,address,address)\n    [1587722158, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint,address,address)\n    [3939013249, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint256,address,bool)\n    [2182163010, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint,address,bool)\n    [285649143, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint256,address,string)\n    [2684039059, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint,address,string)\n    [844415720, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint256,address,uint256)\n    [1325727174, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint,address,uint)\n    [1481210622, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint256,bool,address)\n    [3773389720, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint,bool,address)\n    [3847527825, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint256,bool,bool)\n    [894187222, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint,bool,bool)\n    [3816813520, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint256,bool,string)\n    [2885106328, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint,bool,string)\n    [1993105508, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint256,bool,uint256)\n    [3827003247, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint,bool,uint)\n    [1427009269, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint256,string,address)\n    [2084975268, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint,string,address)\n    [3144824297, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint256,string,bool)\n    [2099530013, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint,string,bool)\n    [3919545039, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint256,string,string)\n    [1522028063, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint,string,string)\n    [1821956834, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint256,string,uint256)\n    [3330189777, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint,string,uint)\n    [2697245221, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,uint256,address)\n    [3793609336, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,uint,address)\n    [3201771711, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,uint256,bool)\n    [1982258066, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,uint,bool)\n    [4147936829, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,uint256,string)\n    [2236298390, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,uint,string)\n    [2773406909, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256,uint256)\n    [2812835923, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint,uint)\n    [149837414, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address,address)\n    [612938772, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address,address)\n    [1430734329, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,address,bool)\n    [153090805, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,address,bool)\n    [22350596, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,address,string)\n    [52195187, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint,address,address,string)\n    [2034490470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,address,uint256)\n    [1936653238, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,address,uint)\n    [2587672470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,address,bool,address)\n    [4017276179, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint,address,bool,address)\n    [3056677012, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint256,address,bool,bool)\n    [3813741583, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint,address,bool,bool)\n    [2116501773, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,address,bool,string)\n    [2432370346, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint,address,bool,string)\n    [1676730946, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint256,address,bool,uint256)\n    [1522374954, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,address,bool,uint)\n    [2064181483, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,address,string,address)\n    [2629472255, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint,address,string,address)\n    [3420819197, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint256,address,string,bool)\n    [3425872647, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint,address,string,bool)\n    [581204390, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint256,address,string,string)\n    [1041403043, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint,address,string,string)\n    [2373420580, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint256,address,string,uint256)\n    [1182952285, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint,address,string,uint)\n    [2697204968, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address,uint256,address)\n    [364980149, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint,address,uint,address)\n    [4256361684, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,address,uint256,bool)\n    [1601452668, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,address,uint,bool)\n    [435581801, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,address,uint256,string)\n    [3719324961, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint,address,uint,string)\n    [1054063912, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,address,uint256,uint256)\n    [211605953, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,address,uint,uint)\n    [3399106228, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,bool,address,address)\n    [2716814523, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint,bool,address,address)\n    [2263728396, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint256,bool,address,bool)\n    [1162695845, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint,bool,address,bool)\n    [2449150530, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint256,bool,address,string)\n    [2917159623, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint,bool,address,string)\n    [2721084958, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint256,bool,address,uint256)\n    [125994997, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint,bool,address,uint)\n    [1102442299, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,bool,address)\n    [1768164185, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,bool,address)\n    [1392910941, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool,bool)\n    [3069540257, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool,bool)\n    [1315722005, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,bool,string)\n    [3722155361, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,bool,string)\n    [831186331, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,bool,uint256)\n    [1952763427, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,bool,uint)\n    [3173363033, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,bool,string,address)\n    [4015165464, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint,bool,string,address)\n    [1231956916, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint256,bool,string,bool)\n    [3952250239, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint,bool,string,bool)\n    [879671495, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint256,bool,string,string)\n    [1757984957, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint,bool,string,string)\n    [2754870525, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint256,bool,string,uint256)\n    [740099910, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint,bool,string,uint)\n    [2438978344, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,bool,uint256,address)\n    [2295029825, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint,bool,uint,address)\n    [1329595790, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool,uint256,bool)\n    [2443193898, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool,uint,bool)\n    [3534472445, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,bool,uint256,string)\n    [3724797812, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint,bool,uint,string)\n    [3906845782, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,bool,uint256,uint256)\n    [3333212072, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,bool,uint,uint)\n    [1451396516, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,string,address,address)\n    [1634266465, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint,string,address,address)\n    [2141537675, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint256,string,address,bool)\n    [2428701270, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint,string,address,bool)\n    [4181720887, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint256,string,address,string)\n    [2621104033, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint,string,address,string)\n    [4170733439, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint256,string,address,uint256)\n    [3906142605, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint,string,address,uint)\n    [2565338099, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,string,bool,address)\n    [2922300801, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint,string,bool,address)\n    [2037328032, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint256,string,bool,bool)\n    [3126025628, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint,string,bool,bool)\n    [1371286465, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,string,bool,string)\n    [3537118157, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint,string,bool,string)\n    [2370346144, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint256,string,bool,uint256)\n    [3472922752, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,string,bool,uint)\n    [2763295359, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,string,address)\n    [3582182914, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint,string,string,address)\n    [3432549024, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,string,bool)\n    [3014047421, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,string,bool)\n    [310782872, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string,string)\n    [564987523, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string,string)\n    [1474103825, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,string,uint256)\n    [2955463101, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,string,uint)\n    [1995203422, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,string,uint256,address)\n    [992115124, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint,string,uint,address)\n    [2877020669, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,string,uint256,bool)\n    [1763348340, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,string,uint,bool)\n    [2270850606, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string,uint256,string)\n    [3082360010, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint,string,uint,string)\n    [2730232985, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,string,uint256,uint256)\n    [2193775476, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,string,uint,uint)\n    [3221501959, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,uint256,address,address)\n    [1453707697, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,uint,address,address)\n    [3398671136, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,uint256,address,bool)\n    [365610102, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,uint,address,bool)\n    [2833785006, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,uint256,address,string)\n    [1826504888, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,uint,address,string)\n    [3600994782, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,uint256,address,uint256)\n    [2297881778, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,uint,address,uint)\n    [1628154048, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,uint256,bool,address)\n    [2592172675, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,uint,bool,address)\n    [3776410703, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,uint256,bool,bool)\n    [2869451494, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,uint,bool,bool)\n    [2495495089, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,uint256,bool,string)\n    [2780101785, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,uint,bool,string)\n    [4024028142, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,uint256,bool,uint256)\n    [3950997458, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,uint,bool,uint)\n    [1818524812, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,uint256,string,address)\n    [1121066423, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,uint,string,address)\n    [1127384482, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,uint256,string,bool)\n    [2062986021, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,uint,string,bool)\n    [2989403910, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,uint256,string,string)\n    [668512210, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,uint,string,string)\n    [2080582194, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,uint256,string,uint256)\n    [1570936811, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,uint,string,uint)\n    [949229117, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,uint256,address)\n    [4202792367, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,uint,address)\n    [3766828905, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,uint256,bool)\n    [3315126661, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,uint,bool)\n    [1683143115, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,uint256,string)\n    [1506790371, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,uint,string)\n    [2024634892, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256,uint256)\n    [423606272, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint,uint)\n    [1554033982, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]]\n]);\n//# sourceMappingURL=signatures.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeterministicSeedPhrase = void 0;\n// Don't change! We need maintain original determinism since the beginning\nexports.DeterministicSeedPhrase = \"TestRPC is awesome!\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst util_1 = require(\"@ethereumjs/util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = transaction.from;\n    const to = transaction.to ?? null;\n    const value = transaction.value == null ? 0n : transaction.value.toBigInt();\n    vm.evm.runCall({\n        origin: caller,\n        block: transaction.block,\n        gasPrice: transaction.gasPrice.toBigInt(),\n        caller,\n        gasLimit: gasLeft,\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const eei = vm.eei;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = ethereum_address_1.Address.from(address);\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await eei.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = nonce === \"\" ? 0n : utils_1.Quantity.toBigInt(nonce);\n            }\n            if (balance != null) {\n                account.balance = balance === \"\" ? 0n : utils_1.Quantity.toBigInt(balance);\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : util_1.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.database().put(codeHash, codeBuffer);\n            }\n            await eei.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await eei.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst cache_1 = require(\"./cache\");\nconst state_manager_1 = require(\"../state-manager\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends state_manager_1.GanacheStateManager {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n        this.prefixCodeHashes = opts.prefixCodeHashes || false;\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            prefixCodeHashes: this.prefixCodeHashes\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.storageRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.database().checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst cache_1 = require(\"@ethereumjs/statemanager/dist/cache\");\nclass ForkCache extends cache_1.Cache {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? util_1.Account.fromRlpSerializedAccount(rlp) : new util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248, 68, 128, 1, 160, 86, 232, 31, 23, 27, 204, 85, 166, 255, 131, 69, 230,\n    146, 192, 248, 110, 91, 72, 224, 27, 153, 108, 173, 192, 1, 98, 47, 181, 227,\n    99, 180, 33, 160, 197, 210, 70, 1, 134, 247, 35, 60, 146, 126, 125, 178, 220,\n    199, 3, 192, 229, 0, 182, 83, 202, 130, 39, 59, 123, 250, 216, 4, 93, 133,\n    164, 112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 20 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param eei -\n */\nconst activatePrecompiles = async (eei) => {\n    await eei.checkpoint();\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.putAccount(account, PRECOMPILED_ACCOUNT);\n    }\n    await eei.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param eei -\n */\nconst warmPrecompiles = async (eei) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dumpTrieStorageDetails = exports.getStorage = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\n/**\n * Compares `a` with `b` and returns a boolean indicating whether `a` comes\n * before `b` in sort order. Comparison is based on the actual sequence of bytes\n * in each `Buffer`.\n *\n * * `true` is returned if `a` comes before `b`\n * * `false` is returned if `a` is equal to, or comes after `b`\n *\n * @param a A `Buffer` with which to compare `b`.\n * @param b A `Buffer` with which to compare `a`.\n */\nconst compare = (a, b) => a.compare(b) < 0;\n/**\n * Iterates over all keys in the trie, drops keys that sort before `startKey`,\n * sorts them, and then returns them in sorted order, along with their values.\n *\n * The `keys` and `values` fields may contain more than `maxKeys` records. The\n * `length` property must be used determine which keys are relevant.\n *\n * The value property is the raw value, it has not been RLP decoded.\n *\n * `nextKey` is set if there are more than `maxKeys` after `startKey`.\n *\n * @param trie\n * @param startKey\n * @param maxKeys\n * @returns\n */\nasync function getHashedKeysWithValues(trie, startKey, maxKeys) {\n    return await new Promise((resolve, reject) => {\n        const keys = [];\n        const values = [];\n        trie\n            .createReadStream()\n            .on(\"data\", function onData({ key, value }) {\n            // ignore anything that comes before our starting point\n            if (startKey.compare(key) > 0)\n                return;\n            // insert the key exactly where it needs to go in the array\n            const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n            // ignore if the value couldn't possibly be relevant (array is full, and\n            // this element sorts after the last element we already have)\n            // note we _want_ to collect 1 more key than `maxKeys` so we can return\n            // `nextKey` if necessary\n            if (position > maxKeys)\n                return;\n            keys.splice(position, 0, key);\n            values.splice(position, 0, value);\n        })\n            .on(\"end\", function onEnd() {\n            const length = keys.length;\n            if (length > maxKeys) {\n                // we have too many keys, set the `length` to `maxKeys` and return a\n                // `nextKey`:\n                const nextKey = utils_1.Data.from(keys[maxKeys]);\n                resolve({\n                    keys,\n                    length: maxKeys,\n                    nextKey,\n                    values\n                });\n            }\n            else {\n                resolve({\n                    keys,\n                    length,\n                    nextKey: null,\n                    values\n                });\n            }\n        })\n            .on(\"error\", reject);\n    });\n}\n/**\n * Given an array of keccak256 hashed `keys` and RLP encoded `values` pairs,\n * look up the \"raw\" (unhashed) key in the given `database` for each pair,\n * returning a `Record` of `StorageRecord`s for each pair where the Record key\n * is the hashed key and the `Record`'s value is another `Record` where the key\n * is the \"raw\" key and the value is the RLP decoded `value`.\n *\n * @param hashedKeys - the hash keys\n * @param values - the RLP encode values\n * @param count - the number of pairs from hashedKeys/values to process\n * @param database - the database containing the `hashedKey -> rawKey` index.\n */\nasync function getStorage(hashedKeys, values, count, database) {\n    const storage = {};\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n        const hashedKey = hashedKeys[i];\n        promises.push(\n        // get the \"raw\" key using the *hashed* key\n        database.get(hashedKey).then((rawKey) => {\n            storage[utils_1.Data.toString(hashedKey, 32)] = {\n                key: utils_1.Data.from(rawKey, 32),\n                value: utils_1.Data.from((0, rlp_1.decode)(values[i]), 32)\n            };\n        }));\n    }\n    await Promise.all(promises);\n    return storage;\n}\nexports.getStorage = getStorage;\n/**\n * Returns storage within the given `storageTrie` given a `startKey` and max\n * number of entries to return (`maxKeys`).\n *\n * `ethereumjs-vm` has a `dumpStorage(account)` method, but we need to honor\n * `startKey` and `maxKeys`, and we do that by not loading every key and\n * value into memory, which `dumpStorage` would do.\n *\n * @param startKey\n * @param maxKeys\n * @param storageTrie\n * @param database\n */\nasync function dumpTrieStorageDetails(startKey, maxKeys, storageTrie, database) {\n    const { keys, length, nextKey, values } = await getHashedKeysWithValues(storageTrie, startKey, maxKeys);\n    return {\n        storage: await getStorage(keys, values, length, database),\n        nextKey\n    };\n}\nexports.dumpTrieStorageDetails = dumpTrieStorageDetails;\n//# sourceMappingURL=storage-range-at.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(utils_1.VERSION_KEY);\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(utils_1.VERSION_KEY, version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\n/*!\n * @ganache/filecoin-options\n *\n * @author Tim Coulter\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinDefaults = exports.FilecoinOptionsConfig = void 0;\nconst src_1 = require(\"./src\");\nvar src_2 = require(\"./src\");\nObject.defineProperty(exports, \"FilecoinOptionsConfig\", { enumerable: true, get: function () { return src_2.FilecoinOptionsConfig; } });\nObject.defineProperty(exports, \"FilecoinDefaults\", { enumerable: true, get: function () { return src_2.FilecoinDefaults; } });\nexports.default = {\n    FilecoinDefaults: src_1.FilecoinDefaults,\n    FilecoinOptionsConfig: src_1.FilecoinOptionsConfig\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.ChainOptions = {\n    ipfsHost: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator host name/address to listen on.\",\n        default: () => \"127.0.0.1\",\n        cliType: \"string\"\n    },\n    ipfsPort: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator port.\",\n        default: () => 5001,\n        cliType: \"number\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        cliAliases: [\"db\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst fs_1 = require(\"fs\");\nconst utils_1 = require(\"@ganache/utils\");\nconst os_1 = require(\"os\");\nexports.LoggingOptions = {\n    file: {\n        normalize: (raw) => {\n            let descriptor;\n            try {\n                descriptor = (0, fs_1.openSync)(raw, \"a\");\n            }\n            catch (err) {\n                const details = err.message;\n                throw new Error(`Failed to open log file ${raw}. Please check if the file path is valid and if the process has write permissions to the directory.${os_1.EOL}${details}`);\n            }\n            return descriptor;\n        },\n        cliDescription: \"The file to append logs to.\",\n        cliType: \"string\"\n    },\n    logger: {\n        normalize: (logger, config) => {\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger: logger\n            });\n        },\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: config => {\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger: console\n            });\n        }\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.MinerOptions = {\n    blockTime: {\n        normalize: value => Math.max(0, value),\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A `blockTime` of `0` or a negative number enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        cliType: \"number\"\n    },\n    mine: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Enable mining. Set to `false` to pause the miner.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 838;\nmodule.exports = webpackEmptyContext;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst flavors_1 = require(\"@ganache/flavors\");\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: (config, flavor) => {\n            switch (flavor) {\n                case flavors_1.FilecoinFlavorName:\n                    return \"/rpc/v0\";\n                case flavors_1.DefaultFlavor:\n                default:\n                    return \"/\";\n            }\n        },\n        defaultDescription: '\"/\" (Ethereum), \"/rpc/v0\" (Filecoin)'\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * HTTP/1.1 Response Status-Codes, including the _required_ space character.\n *\n * e.g., `\"200 \"` or `\"404 \"`\n *\n * RFC Grammar:\n *\n * ```ebnf\n * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n * ```\n *\n * The Status-Codes defined here fullfill the `Status-Code SP` part of the above\n * grammar.\n *\n * See https://datatracker.ietf.org/doc/html/rfc2616#section-6.1 for details.\n */\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200 \";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204 \";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400 \";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404 \";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405 \";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418 \";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","__importDefault","mod","value","PromiEvent","JsonRpcErrorCode","makeResponse","makeRequest","makeError","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","default","decode","encodeLength","encode","digest","encodeRange","utils_1","input","Array","isArray","length","output","i","l","enc","push","buf","Buffer","concat","encodedLength","allocUnsafe","encLength","len","offset","hexLength","uintToBuffer","lLength","firstByte","safeSlice","start","end","Error","slice","decodeLength","v","parseHexByte","hexByte","byte","Number","parseInt","isNaN","bytesToHex","uint8a","hex","cachedHexes","_decode","llength","data","innerRemainder","d","decoded","remainder","from","totalLength","items","count","encoded","ranges","alloc","lengthEncodedLength","copy","range","j","entry","size","BUFFER_EMPTY","_v","toString","padStart","Address","util_1","constructor","super","static","Data","toBuffer","ByteLength","toJSON","debug","normalize","rawInput","GetConnector","DefaultOptionsByName","DefaultFlavor","FilecoinFlavorName","EthereumFlavorName","ethereum_1","ethereum_options_1","filecoin_options_1","colors_1","chalk_1","NEED_HELP","COMMUNITY_LINK","flavor","providerOptions","executor","Connector","f","eval","e","message","includes","console","warn","TruffleColors","porsche","turquoise","process","exit","EthereumDefaults","FilecoinDefaults","computeIntrinsicsFeeMarketTx","computeIntrinsicsAccessListTx","digestWithPrefix","encodeWithPrefix","computeIntrinsicsLegacyTx","computeFromAddress","publicKeyConvert","ecdsaRecover","isValidSigRecovery","rlp_1","ethereum_address_1","secp256k1_1","copyOrFill","source","target","targetStart","byteLength","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","sharedBuffer","rBuf","sBuf","recid","keccak","signature","partialRlp","chainId","eip155V","extras","bigIntToBuffer","epilogue","senderPubKey","publicKey","SHARED_BUFFER","raw","encodedData","encodedSignature","serialized","toBigInt","hash","allocUnsafePrefix","prefix","toNumber","subarray","VERSION_KEY","KNOWN_CHAINIDS","WEI","BUFFER_8_ZERO","BUFFER_32_ZERO","BUFFER_ZERO","ACCOUNT_ZERO","BUFFER_256_ZERO","fill","Set","RuntimeTransaction","hasPartialSignature","toValidLengthAddress","ethereum_utils_1","base_transaction_1","transaction_receipt_1","address","fieldName","buffer","ONE_BUFFER","Quantity","One","BaseTransaction","common","extra","finalizer","locked","validateAndSetSignature","r","s","nonce","toEthRawTransaction","computeIntrinsics","userFrom","equals","finalized","Promise","resolve","args","nextTick","gas","gasLimit","to","dataVal","fillFromResult","result","cumulativeGasUsed","vmResult","execResult","status","exceptionError","execException","RuntimeError","RETURN_TYPES","TRANSACTION_HASH","receipt","InternalTransactionReceipt","fromValues","bloom","bitvector","logs","totalGasSpent","createdAddress","type","serialize","getReceipt","getLogs","once","_event","finalize","error","_Manager_Type","_Manager_options","__classPrivateFieldSet","receiver","state","kind","TypeError","has","set","__classPrivateFieldGet","Manager","base","options","getRaw","key","catch","async","put","del","WeakMap","SECP256K1_MAX_PRIVATE_KEY_DIV_2","SECP256K1_N","path_1","secp256k1","nodeRequire","path","dir","dirname","nodeGypBuild","Secp256k1","__setModuleDefault","__importStar","Tree","lexico","rlp","height","closestKnownAncestor","closestKnownDescendants","encodeKey","decodeKey","parent","children","tree","__experimental_info","provider","server","_DefaultServerOptions","ServerStatus","Server","connector_loader_1","server_1","server_2","Ganache","initialize","connector","version","fork","knownChainIds","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","id","requestCache","Map","fireForget","forkingOptions","requestsPerSecond","url","userAgent","origin","limiter","WINDOW_SECONDS","valueCache","max","headers","password","username","isInfura","host","endsWith","setAuthHeaders","setUserHeaders","setCache","cache","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","name","toLowerCase","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","JSON","parse","method","params","notFound","send","disableCache","memCached","diskCached","getFromSlowCache","promise","handle","then","response","aborted","reject","AbortError","hasOwn","prom","_","add","finally","delete","CodedError","code","stringify","all","keys","close","JSONRPC_PREFIX","TransactionType","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","crypto_1","fs_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","MAX_ACCOUNTS","scrypt","err","derivedKey","uncompressedPublicKeyToAddress","uncompressedPublicKey","asUUID","uuid","Wallet","opts","logging","knownAccounts","keyFiles","unlockedAccounts","lockTimers","rand","makeAccountAtIndex","createAccountGeneratorFromSeedAndPath","mnemonicToSeedSync","mnemonic","hdPath","balanceParts","defaultBalance","significand","BigInt","fractionalStr","fractional","magnitude","defaultBalanceInWei","etherInWei","accounts","givenAccounts","accountsLength","givenAccount","secretKey","account","balance","acct","numberOfAccounts","totalAccounts","privateKey","createAccountFromPrivateKey","createAccount","passphrase","lock","lockAccounts","addToKeyFileSync","strAddress","lowerAddress","logger","log","alea","initialAccounts","values","addresses","givenUnlockedAccounts","ul","arg","addressOrIndex","indexOf","createFakePrivateKey","index","isSafeInteger","accountKeysPath","fileData","private_keys","forEach","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","update","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","Account","privateToAddress","createRandomAccount","seed","createAccountFromSeed","Zero","duration","getFromKeyFile","existingTimer","clearTimeout","durationMs","timeout","setTimeout","unref","addToKeyFile","splice","fakePrivateKey","addressBuf","first12","compare","lockAccount","Handlers","bytes","bool","string","uint256","int256","fixedBytes","WORD_SIZE","OR_WITH_TWOS_COMPLEMENT","getDynamicDataMarkers","memory","startUint32MemoryPosition","readUInt32BE","handleBytes","twosComplementBuffer","twosComplementBigInt","bufferToBigInt","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","Capacity","trie_1","emittery_1","replace_from_heap_1","ethereum_transaction_1","provider_events_1","console_log_1","updateBloom","blockBloom","sortByPrice","a","b","effectiveGasPrice","refresher","item","context","updateEffectiveGasPrice","Miner","executables","vm","createBlock","Heap","block","maxTransactions","FillBlock","onlyOneBlock","lastBlock","transactions","nextBlock","runtimeBlock","pending","inProgress","keepMining","priced","storageKeys","blockTransactions","transactionsTrie","Trie","receiptTrie","Empty","stateManager","checkpoint","commit","finalizedBlockData","root","_trie","extraData","emit","numTransactions","blockGasLeft","blockGasLimit","blockGasUsed","promises","TraceData","TraceDataFactory","stepListener","event","opcode","stack","hashedKey","best","evm","events","on","peek","calculateIntrinsicGas","blockNumber","header","number","gasUsed","txKey","pendingOrigin","removeBest","Params","TRANSACTION_GAS","revert","removeListener","refresh","tx","maybeGetLogs","makeStepEvent","runTx","skipHardForkValidation","toVmTransaction","errorMessage","runState","programCounter","returnValue","clear","pricedArray","array","origins","mapping","next","price","previousBlock","newBlock","baseFeePerGas","init","resume","toggleStepEvent","enable","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","ethereum_block_1","LATEST_INDEX_KEY","EMPTY_BUFFER","BlockManager","blockchain","blockIndexes","Block","fromFallback","tagOrBlockNumber","fallback","isValidForkBlockNumber","json","request","getCommonForBlock","timestamp","rawFromJSON","bm","updateTaggedBlocks","hasWithdrawals","withdrawalsRoot","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","mixHash","totalDifficulty","txs","extraTxs","blockHash","txJson","blockExtra","txExtra","TransactionFactory","fromRpc","extraWithdrawals","withdrawals","withdrawal","validatorIndex","amount","getBlockByTag","tag","latest","earliest","getEffectiveNumber","Tag","getNumberFromHash","numBuf","secondaryKey","createValueStream","limit","latestBlockNumber","getEarliest","_InternalTransactionReceipt_init","STATUSES","contractAddress","txType","transaction","blockLog","BlockLogs","transactionHash","transactionIndex","append","isActivatedEIP","TrieDB","subleveldown_1","ENCODING_OPTS","keyEncoding","valueEncoding","db","_db","val","opStack","batch","sublevel","createReadStream","MAX_UINT32","num","uintWideToBuf","hi","hiLsb","six","five","lo","lsb","two","one","uint32ToBuf","second","third","BaseJsonRpcType","input_parsers_1","inspect","Symbol","for","bufferValue","isBuffer","parseAndValidateStringInput","parseAndValidateNumberInput","parseAndValidateBigIntInput","_depth","_options","valueOf","isNull","ethereumjs_abi_1","REVERT_REASON","captureStackTraceExtended","bind","codedError","captureStackTrace","nonEnumerableProperty","reason","rawDecode","INSUFFICIENT_FUNDS","TRANSACTION_LOCKED","VM_EXCEPTIONS","VM_EXCEPTION","GAS_LIMIT","INITCODE_TOO_LARGE","INTRINSIC_GAS_TOO_LOW","REPLACED","UNDERPRICED","NONCE_TOO_LOW","INVALID_SENDER","params_1","MAX_UINT64","hasToAddress","hardfork","TRANSACTION_CREATION_GAS","dataLength","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","bigDataLength","zeroBytes","INITCODE_WORD_GAS","setExtra","ACCESS_LIST_ADDRESS_GAS","ACCESS_LIST_STORAGE_KEY_GAS","AccessLists","isAccessList","tx_1","tx_2","accessList","AccessListJSON","bufferAccessList","slots","accessListStorageKeyCost","accessListAddressCost","newAccessList","addressBuffer","storageItems","storageKeysLength","jsonItem","dataFeeEIP2930","convertRawWithdrawals","blockTransactionFromRaw","serializedStart","serializedLength","middle","ending","txData","isLegacyRawTransaction","fromSafeTypeAndTxData","parts","pieces","part","lengthBuffer","lengthLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_createFastForwardVm","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","Status","os_1","miner_1","database_1","common_1","vm_1","evm_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","trie_2","precompiles_1","transaction_receipt_manager_1","mcl_wasm_1","storage_range_at_1","state_manager_2","common_helpers_1","mclInitPromise","BLS12_381","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","trieDB","ForkTrie","GanacheTrie","Blockchain","coinbase","starting","blocks","blockHeader","blockNumberQ","blockLogs","timestampStr","Date","logOutput","serializeForDb","encodedReceipt","transactionReceipts","putBlock","updateLatestIndex","join","EOL","blockInfo","instamine","setImmediate","str","blockData","saveBlockProm","previousHeader","previousNumber","minerOptions","RuntimeBlock","isPostMerge","getMixHash","calcNextBaseFee","KECCAK256_RLP","isStarted","started","mine","timestampIncrement","setTimeDiff","paused","createVmFromStateTrie","stateTrie","allowUnlimitedContractSize","activatePrecompile","getBlock","ForkStateManager","trie","prefixCodeHashes","GanacheStateManager","eei","EEI","EVM","VM","activatePrecompiles","map","fallbackBlock","putAccount","INITIAL_BASE_FEE_PER_GAS","genesis","rawBlockNumber","precedingTimestamp","timeAdjustment","Math","floor","now","blocksToDelete","newLatestBlockNumber","revertMetaData","getTransactions","txHash","blockNum","snaps","unsubscribeFromBlocks","chain","_cache","flush","transactionEventContext","skipNonce","skipBalance","skipBlockGasLimitValidation","currentDepth","storageStack","structLogs","gasLeft","gasUsedPreviousStep","disableMemory","memoryWordCount","disableStack","stackItem","structLog","depth","gasCost","op","pc","storage","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","targetBlock","parentBlock","uncleHeaders","blockTime","database","networkId","createCommon","Common","custom","comment","defaultHardfork","baseChain","allowUnlimitedInitCodeSize","removeEIP3860InitCodeSizeLimitCheck","gteHardfork","startTime","time","getTime","firstBlockTime","txPool","transactionPool","minerOpts","nullResolved","mineAll","Single","wait","clearListeners","stopping","stop","pause","_threads","increaseTime","milliseconds","newTime","currentTime","snapshot","snapshots","current","snapshotId","rawValue","snapshotIndex","currentHash","snapshotBlock","snapshotHeader","snapshotHash","blockPromises","blockList","getByHash","setStateRootSync","_storageTries","isExecutable","vmErrorsOnRPCResponse","overrides","transactionContext","setContext","ganacheStepEvent","caller","callerAddress","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","getAccount","txCost","gasPrice","startBalance","runCall","EvmError","EvmErrorMessage","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","startKey","maxResult","trieDb","storageKeysDb","contractAddressBuffer","rawAccount","storageTrie","getStorageTrie","dumpTrieStorageDetails","removeAllListeners","stopped","EthereumOptionsConfig","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","ChainOptions","DatabaseOptions","LoggingOptions","MinerOptions","wallet","WalletOptions","ForkOptions","OptionsConfig","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","c","arguments","Reflect","decorate","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","defaultLimit","defaultTransactionGasLimit","defaultGasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","CLIENT_VERSION","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","personal","assertExceptionalTransactions","errors","baseError","EthereumApi","dbName","vmAddress","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","offsetMilliseconds","addy","addUnknownAccount","removeKnownAccount","threads","resumption","parentHeader","generateVM","callGasLimit","runArgs","gasEstimate","slotBuffers","slotHex","stateManagerCopy","setStateRoot","proof","getProof","storageHash","accountProof","storageProof","rawBlock","getRawByBlockNumber","rawTransactions","uncleIndex","powHash","hashRate","clientID","Gwei","getBalance","getCode","position","blockStateRoot","posBuff","paddedPosBuff","addressData","addressStateRoot","hashBuffer","find","dataHash","transactionPromise","receiptPromise","fromString","isKnownAccount","queueTransaction","signAndHash","messageHash","hashPersonalMessage","ecsign","toRpcSig","typedData","eth_signTypedData_v4","types","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","unsubscribe","topics","parseFilterDetails","filter","METHOD_NOT_FOUND","subscriptionId","updates","FilterTypes","filterId","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getNonce","baseFeePerGasBigInt","hasGasPrice","hasMaxFeePerGas","hasMaxPriorityFeePerGas","tip","simulatedTransaction","simulateTransaction","blockCount","newestBlock","rewardPercentiles","PRECISION_BIG_INT","newestBlockNumber","totalBlocks","min","gasUsedRatio","reward","ERR_INVALID_PERCENTILE","oldestBlockNumber","currentBlock","currentPosition","baseFee","receipts","effectiveRewardAndGasUsed","idx","effectiveGasReward","sort","percentile","totalGasUsed","targetGas","oldestBlock","traceTransaction","storageRangeAt","newAccount","rawKey","unlockAccount","postData","processMap","res","queued","assertArgLength","HttpHandler","http_1","https_1","base_handler_1","deferred_1","accept","protocol","_request","agent","Agent","keepAlive","scheduling","messageLength","chunks","chunk","hostname","port","pathname","search","requestOptions","signal","queueRequest","deferred","req","handleChunkedResponse","handleLengthedResponse","resStr","shortStr","msg","startsWith","abort","write","PersistentCache","tree_1","env_paths_1","leveldown_1","encoding_down_1","ancestry_1","helpers_1","levelup","levelupOptions","leveldownOpts","maxValueByteBuffer","_reBalancePromise","dbSuffix","directory","getDbDirectory","destroy","rs","ancestorDb","gte","collection","node","deserialize","keyHex","parentKeyHex","descendants","suffix","mkdir","recursive","store","cacheDb","open","setDbVersion","closestAncestor","previousClosestAncestor","resolveTargetAndClosestAncestor","ancestry","Ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","getBlockByNumber","startSize","maybeDescendant","findClosestDescendants","some","parentTree","isOpen","getBlockNumberFromParams","bufKey","readStream","gt","lt","_height","_key","dbKey","_Server_options","_Server_providerOptions","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_host","_Server_connector","_Server_websocketServer","_Server_initializer","aggregate_error_1","uws_js_unofficial_1","_cfg","Uint8Array","flavors_1","ws_server_1","http_server_1","v4Seg","IPv4Reg","RegExp","DEFAULT_HOST","serverDefaults","providerAndServerOptions","unknown","serverOptionsConfig","ready","loader","_app","App","ws","listen","callback","callbackIsFunction","trim","portNumber","closing","openingOrOpen","opening","allSettled","listenSocket","closed","promiseResults","family","test","us_socket_local_port","closingOrClosed","_listenSocket","us_listen_socket_close","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","utils_2","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","byNonce","TransactionPool","drain","INVALID_INPUT","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","cost","maxGasPrice","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","_Connector_provider","_Connector_handle","provider_1","bufferify_1","BUFFERIFY_THRESHOLD","payload","connection","isHttp","METHOD_NOT_SUPPORTED","_requestRaw","EthereumProvider","PARSE_ERROR","format","results","bufferify","formatError","disconnect","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_wallet","_EthereumProvider_executor","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","network","Fork","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","getOptions","getInitialAccounts","unlocked","sendAsync","rawResult","execute","normalizedData","jsonrpc","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","trie_db_1","setGracefulCleanup","tmpOptions","unsafeCleanup","noop","Database","databaseOptions","shouldTryMigrate","dbPath","dirInfo","cleanup","sublevelTrie","runMigrations","ops","stream","migrate","fn","rootDb","originalPut","originalDel","ret","wasClosed","_BlockLogManager_blockchain","BlockLogManager","fromJSON","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","blockLogsRange","filteredBlockLogs","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","serializeRpcForDb","factory","insertion","prepareTransaction","isBusy","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","shift","resolved","first","cancelledQueue","mixin","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","selectValidForkBlockNumber","codeProm","codeHex","storageFromFallback","compressed","replace","forkBlockNumber","metadataDB","checkpointedMetadata","CheckpointDB","_root","startBlockNumber","endBlockNumber","createKeyStream","createDelKey","selfAddress","checkpoints","encodedKeyStr","keyValueMap","entries","lte","reverse","_lock","acquire","findPath","_deleteNode","persistRoot","delKey","metaDataPutPromise","release","keyWasDeleted","includeCheckpoints","secureTrie","hasCheckpoints","_TransactionReceiptManager_blockchain","TransactionReceiptManager","topic","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","abort_controller_1","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","fetchBlock","chainIdPromise","latestBlock","effectiveBlockNumber","preLatestConfirmations","isInteger","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","WsHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","deleteDb","_e","fetchChainId","chainIdHex","initCache","forkCommon","hf","hardforks","hfTimestamp","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","fragment_generator_1","prepareCORSResponseHeaders","getHeader","acrh","writeHeader","sendResponse","closeConnection","statusCode","contentType","writeHeaders","cork","writeStatus","HttpServer","app","onAborted","onData","isLast","BAD_REQUEST","PLAIN","isGeneratorObject","sendChunkedResponse","chunkSize","fragments","getFragmentGenerator","firstFragment","nextFragment","done","OK","NO_CONTENT","post","rpcEndpoint","IM_A_TEAPOT","any","connectionHeader","NOT_FOUND","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","MAX_SAFE_INTEGER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","lastIndex","lastIndexOf","substr","asNum","_blockNumber","conjunction","last","arrayToOxfordList","cliDescription","legacyName","cliAliases","conflicts","disableInCLI","cliChoices","defaultDescription","cliType","implies","cliCoerce","reduce","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","connections","wsBinary","autoBinary","maxPayloadLength","idleTimeout","isBinary","resultEmitter","resultEmitterPromiEvent","dispose","CLOSE_NORMAL","_Executor_requestCoordinator","Executor","has_own_1","requestCoordinator","api","methodName","__proto__","String","_RequestCoordinator_paused","_RequestCoordinator_process","RequestCoordinator","runningTasks","thisArgument","argumentsList","apply","PromiEvent_1","emitteryMethods","onrejected","onAny","eventData","_OptionsConfig_defaults","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","definition","def","config","namespaceOptions","propDefinition","normalized","_AccountManager_blockchain","AccountManager","fromBuffer","trieCopy","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","DeterministicSeedPhrase","entropyToMnemonic","notVeryRandomBytes","keccak_1","instance","_state","absorb","squeeze","_finalized","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","numbers","getBuffer","ecsignLegacy","msgHash","ecdsaSign","InternalTag","safe","deriveFromIndex","deriveFromPath","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","chainCode","makePublicKey","fullPath","child","hardened","childIndex","deriveChild","publicKeyCreate","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","IL","newPrivK","privateKeyTweakAdd","bn_js_1","bn","STIPEND","bigIntToBN","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","MAX","gasRefund","startingGas","isEnoughGas","toArrayLike","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","isPrecompile","systemOps","stepTracker","Context","fee","sixtyFloorths","intermediateCost","callingFee","compositeContext","addGas","gtn","isub","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","innerCost","sub","RETURN_VALUE","estimate","gasLeftStart","gasLeftEnd","actualUsed","sysops","opIndex","cursor","currentIndex","feeBn","getTotal","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","addEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","LimitCounter","currentWindow","currWindow","prevWindow","currCount","prevCount","rate","nextLimit","schedule","leave","increment","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","ws_1","inFlightRequests","binaryType","connect","onclose","onmessage","onMessage","messageId","onopen","onerror","FilecoinOptionsConfig","constants_1","uint_to_buffer_1","_bigIntToBuffer","bigIntByteLength","toBufferBE","bigint_buffer_1","readUIntBE","view","padded","DataView","toBigIntBE","byteOffset","getBigUint64","_hasOwn","obj","prop","details","getOwnPropertyNames","flavors_2","asyncRequestProcessing","connectPromise","errors_1","coded_error_1","returnType","createRevertReason","runtime_block_1","serialize_1","block_params_1","_common","deserialized","_raw","_rawTransactions","_rawWithdrawals","_rawTransactionMetaData","_size","makeHeader","oldRawTx","_hash","includeFullTransactions","txFn","getTxFn","uncles","include","nextBaseFee","parentGasTarget","BlockParams","ELASTICITY","parentGasUsed","adjustedFeeDelta","BASE_FEE_MAX_CHANGE_DENOMINATOR","maxPossibleBaseFee","calcNextBaseFeeBigInt","EIP2930AccessListTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","accessListData","getAccessListData","accessListJSON","accessListDataFee","getSenderAddress","getBaseFee","getUpfrontCost","supports","capability","sig","EIP1559FeeMarketTransaction","maxPriorityFeePerGasBI","maxFeePerGasBI","gasLimitBI","valueBI","bigIntMin","LegacyTransaction","getBlockSize","block_1","previousBlockTotalDifficulty","prevRandao","cliqueSigner","rawHeader","KECCAK256_RLP_ARRAY","isEip4895","normalizeEvent","originalMemory","memoryLength","storageRoot","codeAddress","returnStack","maybe_get_logs_1","statemanager_1","DefaultStateManager","_getStorageTrie","keyHashingFunction","useRootPersistence","useKeyHashing","useKeyHashingFunction","changeCommonParamValue","eip","original","paramByEIP","paramTopic","paramName","paramEip","Deferred","server_options_1","ServerOptions","bufferSize","quiet","file","descriptor","openSync","createLogger","baseLogger","toBigIntOrString","normalizeQuantity","rawType","less","down","up","element","newLength","replaceBest","newValue","fix","remove","swap","i0","j1","j2","heap","bufferToMinHexKey","latin1Slice","hexSlice","HEX_MAP","findInsertPosition","comp","insertPosition","step","acc","json_rpc_base_types_1","bigint_to_buffer_1","isFinite","hexValue","ceil","_buffer","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","trimmedBuffer","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","START_OF_LINE","baseLog","fd","diskLogFormatter","linePrefix","toISOString","writeStream","createWriteStream","onError","optionalParams","formattedMessage","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","t","iterator","logToJSON","expectedAddresses","PREFIXES","traceDataLookup","existing","lengthDiff","legacy_transaction_1","eip2930_access_list_transaction_1","rpc_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","fromDatabaseTx","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromUnsafeUserData","typeOfRaw","typeOf","rawFromRpc","txAndExtraData","propertyKey","replaceFromHeap","handlers_1","signatures_1","CONSOLE_ADDRESS","memoryOffset","toAddress","memoryStart","memoryEnd","handlers","signatureMap","handler","Entry","onSetteled","_onSetteled","validateStorageOverride","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","cache_1","ForkCache","Cache","getCb","fromRlpSerializedAccount","putCb","deleteCb","SERIALIZED_PRECOMPILE","PRECOMPILED_ACCOUNT","accountCache","makeAccount","getStorage","hashedKeys","maxKeys","nextKey","getHashedKeysWithValues","onEnd","timeSince","windowLength","counters","evict","lastEvict","updatedAt","previousWindow","curr","prev","strParams","cacheLock","knownAncestors","resolver","strKey","loadNextAncestor","findClosestAncestor","findRelated","pair","candidateHeight","upTo","generator","return","recordedVersion","targetHeight","targetHash","earliestBlock","earliestHash","earliestNumber","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","yieldedOpen","yieldPrefix","quotedKey","src_1","src_2","ipfsHost","ipfsPort","infura","webpackEmptyContext","module","buffer_1","kMaxLength","WebSocketCloseCodes","ContentTypes","HttpResponseCodes"],"sourceRoot":""}